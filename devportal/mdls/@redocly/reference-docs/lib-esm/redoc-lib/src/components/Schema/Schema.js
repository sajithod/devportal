import{__assign,__rest}from"tslib";import*as React from"react";import{observer}from"mobx-react";import{RecursiveLabel,TypeName,TypeTitle}from"../../common-elements/fields";import{FieldDetails}from"../Fields/FieldDetails";import{ArraySchema}from"./ArraySchema";import{ObjectSchema}from"./ObjectSchema";import{OneOfSchema}from"./OneOfSchema";import{l}from"../../services/Labels";export var Schema=observer((function(e){var r,t=e.schema,a=__rest(e,["schema"]);if(!t)return React.createElement("em",null," Schema not provided ");var i=t.type,c=t.oneOf,n=t.discriminatorProp,m=t.isCircular,o=(a.level||0)+1;if(m)return React.createElement("div",null,React.createElement(TypeName,null,t.displayType),t.title&&React.createElement(TypeTitle,null," ",t.title," "),React.createElement(RecursiveLabel,null," ",l("recursive")," "));if(void 0!==n)return c&&c.length?React.createElement(ObjectSchema,__assign({},a,{level:o,schema:c[t.activeOneOf],discriminator:{fieldName:n,parentSchema:t}})):(console.warn("Looks like you are using discriminator wrong: you don't have any definition inherited from the "+t.title),null);if(void 0!==c)return React.createElement(OneOfSchema,__assign({},a,{schema:t}));var s=Array.isArray(i)?i:[i];if(s.includes("object")){if(null===(r=t.fields)||void 0===r?void 0:r.length)return React.createElement(ObjectSchema,__assign({},a,{level:o,schema:t}))}else if(s.includes("array"))return React.createElement(ArraySchema,__assign({},a,{level:o,schema:t}));var d={schema:t,name:"",required:!1,description:t.description,externalDocs:t.externalDocs,deprecated:!1,toggle:function(){return null},expanded:!1};return React.createElement("div",null,React.createElement(FieldDetails,{field:d}))}));
//# sourceMappingURL=Schema.js.map