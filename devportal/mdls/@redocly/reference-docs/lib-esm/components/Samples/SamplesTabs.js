import{__assign,__rest}from"tslib";import*as React from"react";import{useContext,useEffect,useState,useMemo}from"react";import{observer}from"mobx-react";import{CollapsingTabsBase}from"../Tabs";import{StoreContext}from"../../redoc-lib";import{LoadingWrapper}from"./LoadingWrapper";import{WarnMessage}from"../shared";export var SamplesTabs=observer((function(e){var a=e.children,t=e.onChange,r=e.defaultLanguage,n=__rest(e,["children","onChange","defaultLanguage"]),o=useMemo((function(){return n.tabs.map((function(e){return e.lang}))}),[n.tabs]),s=useContext(StoreContext),i=useState(r),u=i[0],c=i[1],g=useState(o),m=g[0],f=g[1];useEffect((function(){return f(o)}),[n.tabs]),useEffect((function(){u===s.activeSampleLanguage&&c(void 0)}),[s.activeSampleLanguage]),useEffect((function(){return s.stopLoader()}),[s.activeSampleLanguage]),useEffect((function(){u&&(s.startLoader(),s.activateSampleLanguage(u))}),[u,r]);var p;return React.createElement(LoadingWrapper,{className:u&&"updated"},React.createElement(CollapsingTabsBase,__assign({},n,{activeIndex:(p=m.indexOf(u||s.activeSampleLanguage),-1===p?0:p),onChange:function(e){var a=n.tabs[e];s.setActiveSampleLanguage(a.lang),t&&t(a)}}),r&&-1===m.indexOf(r)&&React.createElement(WarnMessage,null,"Provided language is not supported"),a))}));
//# sourceMappingURL=SamplesTabs.js.map