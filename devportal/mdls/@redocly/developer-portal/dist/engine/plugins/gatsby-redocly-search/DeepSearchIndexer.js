function removeMarkdown(a){return a.replace(/\[(.*?)\][\[\(].*?[\]\)]/g,"$1")}exports.DeepSearchIndexer=class{constructor(a){this.operationTitleBoost=4,this.tagTitleBoost=8,this.fieldLevelBoost=.95,this.searchMaxDepth=8,this.setOptions(a)}indexOperation(a,b){if("operation"===a.type){b(a.name,a.path+"\n"+removeMarkdown(a.description||""),{menuId:a.id});for(let c of a.parameters)b(c.name,removeMarkdown(c.description),{menuId:a.id,place:`parameters`,path:[c.name]});const c=a.requestBody&&a.requestBody.content&&a.requestBody.content.active.schema;this.indexSchema(c,a.id,"request fields",!1,b),a.responses.forEach(c=>{const d=c.content&&c.content.active&&c.content.active.schema;d&&this.indexSchema(d,a.id,`response ${c.code} fields`,!0,b)})}}indexSchema(a,b,c,d,e,g=[],h=0){if(a&&!(h>this.searchMaxDepth||a.isCircular)){if(a=a.oneOf?a.oneOf[a.activeOneOf]:a,a&&a.fields)for(let i of a.fields){const a=g.concat([i.name]);"additionalProperties"!==i.kind&&(i.schema&&i.schema.readOnly&&!d||i.schema&&i.schema.writeOnly&&d||(e(i.name,removeMarkdown(i.description),{menuId:b,place:c,path:a,boost:Math.pow(this.fieldLevelBoost,h)}),this.indexSchema(i.schema,b,c,d,e,a,h+1)))}a&&a.items&&this.indexSchema(a.items,b,c,d,e,g,h)}}setOptions(a){a.searchOperationTitleBoost&&(this.operationTitleBoost=parseInt(a.searchOperationTitleBoost,10)),a.searchTagTitleBoost&&(this.tagTitleBoost=parseInt(a.searchTagTitleBoost,10)),a.searchFieldLevelBoost&&(this.fieldLevelBoost=parseInt(a.searchFieldLevelBoost,10)),a.searchMaxDepth&&(this.searchMaxDepth=parseInt(a.searchMaxDepth,10))}};