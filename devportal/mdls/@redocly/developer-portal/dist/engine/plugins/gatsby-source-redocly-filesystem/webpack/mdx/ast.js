const crypto=require("crypto"),grayMatter=require("gray-matter"),mdx=require("@mdx-js/mdx"),mdxHastToJsx=require("@mdx-js/mdx/mdx-hast-to-jsx.js"),visit=require("unist-util-visit"),{withPathPrefix}=require("../../../../utils/utils"),getSourcePluginsAsRemarkPlugins=require("./convert-plugins"),{remapMetaToSeoData}=require("../../helpers/remapMetaToSeoData");function getPlugins(a){const b=require("../../../../gatsby-config").plugins.find(a=>"string"!=typeof a&&a.hasOwnProperty("resolve")&&"gatsby-transformer-remark"===a.resolve).options.plugins;return a?b.filter(a=>"gatsby-remark-copy-linked-files"!==a.resolve):b}const BLOCKS_REGEX="[a-z\\.]+(\\.){0,1}[a-z\\.]",DEFAULT_OPTIONS={footnotes:!0,mdPlugins:[],hastPlugins:[],compilers:[],blocks:["[a-z\\.]+(\\.){0,1}[a-z\\.]"]};function applyHastPluginsAndCompilers(a,b){const c=b.hastPlugins,d=b.compilers;c.forEach(c=>{Array.isArray(c)&&1<c.length?a.use(c[0],c[1]):a.use(c,b)}),a.use(mdxHastToJsx,b);for(const c of d)a.use(c,b);return a}function createCompiler(a){const b=mdx.createMdxAstCompiler(a);return applyHastPluginsAndCompilers(b,a)}function getAst(a,b={}){const c=Object.assign({},DEFAULT_OPTIONS,b),d=createCompiler(c),e={contents:a};c.filepath&&(e.path=c.filepath);const f=d.parse(e);return f}async function transformAst(a,b={}){const c=Object.assign({},DEFAULT_OPTIONS,b),d=createCompiler(c),e=await d.run(a);return e}function mdxAstToJsx(a,b={}){const c=Object.assign({},DEFAULT_OPTIONS,b),d=createCompiler(c);return d.stringify(a)}function createMDXNode({node:a,content:b}){const{data:c,content:d}=grayMatter(b),e=remapMetaToSeoData(c,a.relativePath),f={id:"fakeNodeIdMDXFileABugIfYouSeeThis",children:[],parent:a.id,internal:{content:b,type:"Mdx"}};return f.frontmatter={...e,_PARENT:a.id},f.excerpt=e.excerpt,f.rawBody=d,`File`===a.internal.type&&(f.fileAbsolutePath=a.absolutePath),f.internal.contentDigest=crypto.createHash(`md5`).update(JSON.stringify(f)).digest(`hex`),f}async function getMdxParser(a,b=!1){const c=await getSourcePluginsAsRemarkPlugins({gatsbyRemarkPlugins:getPlugins(b),...a});return{parseAndTransform:a=>{let{internal:{content:b}}=a;const d={mdPlugins:c};-1===b.indexOf("export default ")&&(b="import { MdxLayout } from '@redocly/developer-portal/ui';\n\nexport default MdxLayout;\n\n"+b);const e=getAst(b,d),f=process.env.REDOCLY_PREFIX_PATHS||"";f&&visit(e,"link",a=>{a.url&&a.url.startsWith("/")&&!a.url.startsWith("//")&&(a.url=withPathPrefix(a.url,f))});const g=transformAst(e,d);return g},stringify:a=>mdxAstToJsx(a,{mdPlugins:c})}}exports.getMdxParser=getMdxParser,exports.createMDXNode=createMDXNode;