const path=require("path"),dotenv=require("dotenv"),fs=require("fs-extra"),{slash}=require("gatsby-core-utils"),webpack=require("webpack"),{ShadowingResolverPlugin}=require("./ShadowingResolverPlugin");exports.onCreateWebpackConfig=function({stage:a,loaders:b,actions:c,reporter:d,getConfig:e,...f},g){const{configPath:h,getSiteConfig:i,envVariablesAllowedClientSide:j}=g,k=e();c.replaceWebpackConfig({...k,module:{...k.module,rules:k.module.rules.map(a=>a.use&&a.use[0]&&a.use[0].loader===require.resolve("url-loader")?{...a,use:[{...a.use[0],options:{...a.use[0].options,esModule:!1}}]}:a)}}),"build-javascript"===a&&"production"===k.mode&&c.setWebpackConfig({devtool:!1}),"build-html"===a&&c.setWebpackConfig({module:{rules:[{test:/(stickyfilljs|details-polyfill)/,loader:"null-loader"}]}}),c.setWebpackConfig({module:{rules:[{test:/\.sample\.[a-zA-Z0-9_-]+$/,loader:"raw-loader"},{test:/__redocly__css_stub.js$/,use:[b.js(),{loader:path.resolve(__dirname,"./custom-css-loader.js"),options:{configPath:h,getSiteConfig:i}}]},{test:/\.mdx$/,use:[b.js(),{loader:path.resolve(__dirname,"./mdx/mdx-loader"),options:{actions:c,reporter:d,...f}}]},{test:/\.js/,include:/node_modules[\/\\]yaml[\/\\]browser/,type:"javascript/auto"},{test:/(stickyfilljs|details-polyfill|node-fetch|node-fetch-h2)/,loader:"null-loader"},{test:/\.jsx?$/,exclude:[/node_modules(?![\/\\](@redocly[\/\\]developer-portal|devportal|formdata-node)[\/\\])/,/\.sample\.m?jsx?$/],use:[b.js()]},{test:/\.mjs$/,include:/node_modules/,exclude:[/\.sample\.m?jsx?$/],type:"javascript/auto"}]},resolve:{fallback:{http:require.resolve("stream-http"),https:require.resolve("stream-http"),path:require.resolve("path-browserify"),os:!1,fs:!1,tty:require.resolve("tty-browserify")},extensions:[".mdx"],alias:{Content:path.resolve(h),"@redocly/ui":path.resolve(__dirname,"../../../src/ui/"),"@redocly/developer-portal/ui":path.resolve(__dirname,"../../../src/ui/"),"@redocly/apigee":path.resolve(__dirname,"../../../src/apigee/"),"core-js":path.dirname(require.resolve(`core-js/package.json`)),react:path.dirname(require.resolve(`react/package.json`)),"react-dom":path.dirname(require.resolve(`react-dom/package.json`)),"styled-components":path.dirname(require.resolve(`styled-components/package.json`)),"styled-system":path.dirname(require.resolve(`styled-system/package.json`)),"@mdx-js/tag":path.dirname(require.resolve("@mdx-js/tag/package.json")),mobx:path.dirname(require.resolve(`mobx/package.json`)),polished:path.dirname(require.resolve(`polished/package.json`)),gatsby:path.dirname(require.resolve(`gatsby/package.json`)),process:"process/browser.js",buffer:"buffer"},plugins:[new ShadowingResolverPlugin(h)]},plugins:[new webpack.ProvidePlugin({process:"process/browser.js",Buffer:["buffer","Buffer"]}),new webpack.NormalModuleReplacementPlugin(/\.[\/\\]Overlay$/,function(a){slash(a.context).endsWith("@redocly/reference-docs/lib-esm/components")&&(a.request=path.join(__dirname,"empty-overlay.js"))}),new webpack.NormalModuleReplacementPlugin(/\.[\/\\]check$/,function(a){slash(a.context).endsWith("@redocly/reference-docs/lib-esm/services")&&(a.request=path.join(__dirname,"empty-check.js"))}),new webpack.NormalModuleReplacementPlugin(/\.[\/\\]SearchStore$/,function(a){a.request=path.join(__dirname,"empty-search-store.js")}),new webpack.DefinePlugin(processEnv(h,d,j))]})};function processEnv(a,b,c){const d=process.env.NODE_ENV||`development`,e=process.env.REDOCLY_ACTIVE_ENV||d,f=path.join(a,`./.env.${e}`);let g={};try{g=dotenv.parse(fs.readFileSync(f,{encoding:`utf8`}))}catch(a){`ENOENT`!==a.code&&b.error(`There was a problem processing the .env file (${f})`,a)}const h=Object.keys(g).reduce((a,b)=>(a[b]=JSON.stringify(g[b]),a),{}),i=Object.keys(process.env).reduce((a,b)=>((b.startsWith("REDOCLY_")||c.includes(b))&&(a[b]=JSON.stringify(process.env[b])),a),{}),j=Object.assign(h,i,{REDOCLY_PREFIX_PATHS:JSON.stringify(process.env.REDOCLY_PREFIX_PATHS||"")});return Object.keys(j).reduce((a,b)=>(a[`process.env.${b}`]=j[b],a),{"process.platform":"\"web\""})}