const path=require("path"),_=require("lodash"),RBAC=require("../rbac"),{CONFIG_FILE_NAME,SIDEBARS_FILE_NAME}=require("../utils"),{createConfigNode,createSidebarNodes}=require("../config-nodes");let pagesInfoCache={};const sidebarsFiles=exports.sidebarsFiles=new Set;exports.cleanPagesCache=()=>{pagesInfoCache={}},exports.getPageInfo=a=>a?(a.startsWith("./")&&(a=a.substr(2)),a.startsWith("/")&&(a=a.substr(1)),pagesInfoCache[a]):null,exports.getAllPagesInfo=()=>Object.values(pagesInfoCache),exports.updatePagesInfoCache=({getNodesByType:a})=>{const b=a("ContentItem");for(const c of b)pagesInfoCache[c.pageId]=buildPageInfo(c)};function buildPageInfo(a){return{label:a.data.label,link:a.link,httpVerb:a.data.httpVerb,pageId:a.pageId,redocPrevLink:a.data.redocPrevLink,redocPrevLabel:a.data.redocPrevLabel,redocNextLink:a.data.redocNextLink,redocNextLabel:a.data.redocNextLabel,redocMenuItems:a.data.redocMenuItems,redocInfoPageId:a.data.redocInfoPageId,apiVersions:a.data.apiVersions,apiVersionId:a.data.apiVersionId,isDefaultApiVersion:a.data.isDefaultApiVersion,permission:a.permission||RBAC.GUEST_PERMISSION,type:a.type,definitionId:a.data.definitionId,sourcePath:a.sourcePath,id:a.id,rawData:a.data}}exports.updatePagesInfo=async function(a,b,{configPath:c,getSiteConfig:d}){const e=buildPageInfo(a),f=pagesInfoCache[a.pageId];f&&_.isEqual(f,e)||!f||(await createConfigNode(path.join(c,CONFIG_FILE_NAME),{...b,configPath:c,getSiteConfig:d}),await createSidebarNodes(path.join(c,SIDEBARS_FILE_NAME),sidebarsFiles,b))};