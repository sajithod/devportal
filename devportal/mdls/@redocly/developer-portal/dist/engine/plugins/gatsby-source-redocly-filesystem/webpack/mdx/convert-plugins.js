module.exports=async function({gatsbyRemarkPlugins:a,mdxNode:b,getNode:c,getNodes:d,reporter:e,cache:f,pathPrefix:g,actions:h,getNodeAndSavePathDependency:i}){let j;`production`===process.env.NODE_ENV&&j||(j=d().filter(a=>`File`===a.internal.type));const k=a=>"string"==typeof a?require(a):require(a.resolve),l=[];return a.forEach(a=>{let m=k(a);if(m=m.default||m,"function"==typeof m.setParserPlugins)for(let b of m.setParserPlugins(a.options||a.pluginOptions))if(Array.isArray(b)){const[a,c]=b;l.push([a,c])}else l.push(b);if("function"!=typeof m)return void console.log("mdPlugins, incorrect plugin filtered",a,m);l.push([function(){const k=this;return async function(l){return await m({markdownAST:l,markdownNode:b,getNode:c,getNodes:d,files:j,reporter:e,pathPrefix:g,cache:f,actions:h,getNodeAndSavePathDependency:i,compiler:{parseString:k.parse.bind(k)}},a.options||a.pluginOptions||{}),l}},{}])}),l};