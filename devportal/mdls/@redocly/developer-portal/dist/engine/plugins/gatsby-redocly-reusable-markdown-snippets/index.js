const fs=require("fs"),visit=require("unist-util-visit"),path=require("path"),{slash}=require("gatsby-core-utils"),Remark=require("remark"),{isChildOf,withPathPrefix}=require("../../utils/utils"),enhancerPlugin=require("../gatsby-remark-enhancer-redocly"),isRelativeUrl=require("is-relative-url"),REGEXP_EMBED_TAGS=RegExp(/<embed\s+src\s*=\s*"[^"]+"\s*\/>/gi),REGEXP_SRC_ATTR=RegExp(/src\s*=\s*"([^"]+)"/);module.exports=async(a,b)=>{function c(a,b,c){const{value:d,type:f}=a,g=d.match(REGEXP_EMBED_TAGS),h=d.split(REGEXP_EMBED_TAGS);if(g&&g.length){const a=[];for(let b=0;b<h.length;b++)h[b]&&a.push({type:f,value:h[b]}),g[b]&&a.push(...e(g[b]));c.children.splice(b,1,...a)}}function d(a){const b=a.match(REGEXP_SRC_ATTR);return b&&b[1]||null}function e(a){const b=d(a);if(!b)return[];const c=path.extname(b);c&&".md"!==c.toLowerCase()&&i.panicOnBuild(`Cannot resolve "${b}" from "${n.relativePath}".\n\n`+`Snippets must be .md files only.`);const e=b.startsWith("/")?path.resolve(k,b.substring(1)):path.resolve(path.dirname(o),b);isChildOf(e,k)||i.panicOnBuild(`Cannot resolve "${b}" from "${n.relativePath}".\n\n`+`You can't reference files from outside the portal root.`);const f=g.fields&&g.fields._snippetDeps||[];if(-1===f.indexOf(e)&&f.push(e),j.createNodeField({node:g,name:"_snippetDeps",value:f}),!fs.existsSync(e))return i.panicOnBuild(`Cannot resolve "${b}" from "${n.relativePath}".\n\n`+`File "${e} does not exist`),[];const h=fs.readFileSync(e,"utf-8"),l=m.parse(h),p=process.env.REDOCLY_PREFIX_PATHS||"";return visit(l,["image","link"],a=>{if(!isRelativeUrl(a.url))return;if(p&&a.url&&a.url.startsWith("/")&&!a.url.startsWith("//")&&(a.url=withPathPrefix(a.url,p)),a.url.startsWith("/"))return;const b=path.resolve(path.dirname(e),a.url),c=path.relative(path.dirname(o),b);a.url=slash(c)}),l.children}const{markdownAST:f,markdownNode:g,getNode:h,reporter:i,actions:j}=a,{configPath:k}=b,l=enhancerPlugin.setParserPlugins(b);let m=new Remark;for(const c of l)if(Array.isArray(c)){const[a,b]=c;m=m.use(a,b)}else m=m.use(c);const n=h(g.parent);if(`File`!==n.internal.type)return;const o=n.absolutePath;return visit(f,["text","html"],(a,b,d)=>{c(a,b,d)}),f};