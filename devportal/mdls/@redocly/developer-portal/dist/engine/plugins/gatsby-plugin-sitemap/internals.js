const minimatch=require("minimatch"),REPORTER_PREFIX=`[gatsby-plugin-sitemap]:`,withoutTrailingSlash=a=>`/`===a?a:a.replace(/\/$/,``);exports.__esModule=!0,exports.prefixPath=prefixPath,exports.resolveSiteUrl=resolveSiteUrl,exports.resolvePagePath=resolvePagePath,exports.resolvePages=resolvePages,exports.defaultFilterPages=defaultFilterPages,exports.serialize=serialize,exports.pageFilter=pageFilter,exports.withoutTrailingSlash=withoutTrailingSlash,exports.REPORTER_PREFIX=REPORTER_PREFIX;function prefixPath({url:a,siteUrl:b,pathPrefix:c=``}){return new URL(c+a,b).toString()}function resolveSiteUrl(a){let b,c;if(!(null!==a&&void 0!==a&&null!==(b=a.site)&&void 0!==b&&null!==(c=b.siteMetadata)&&void 0!==c&&c.siteUrl))throw Error(`\`siteUrl\` does not exist on \`siteMetadata\` in the data returned from the query.
Add this to your \`siteMetadata\` object inside gatsby-config.js or add this to your custom query or provide a custom \`resolveSiteUrl\` function.
https://www.gatsbyjs.com/plugins/gatsby-plugin-sitemap/#api-reference
      `);return a.site.siteMetadata.siteUrl}function resolvePagePath(a){if(!(null!==a&&void 0!==a&&a.path))throw Error(`\`path\` does not exist on your page object.
Make the page URI available at \`path\` or provide a custom \`resolvePagePath\` function.
https://www.gatsbyjs.com/plugins/gatsby-plugin-sitemap/#api-reference
      `);return a.path}function resolvePages(a){let b;if(!(null!==a&&void 0!==a&&null!==(b=a.allSitePage)&&void 0!==b&&b.nodes))throw Error(`Page array from \`query\` wasn't found at \`data.allSitePage.nodes\`.
Fix the custom query or provide a custom \`resolvePages\` function.
https://www.gatsbyjs.com/plugins/gatsby-plugin-sitemap/#api-reference
      `);return a.allSitePage.nodes}function defaultFilterPages(a,b,{minimatch:c,withoutTrailingSlash:d,resolvePagePath:e}){if(`string`!=typeof b)throw new Error(`You've passed something other than string to the exclude array. This is supported, but you'll have to write a custom filter function.
Ignoring the input for now: ${JSON.stringify(b,null,2)}
https://www.gatsbyjs.com/plugins/gatsby-plugin-sitemap/#api-reference
      `);return c(d(e(a)),d(b))}function serialize(a,{resolvePagePath:b}){return{url:`${b(a)}`,changefreq:`daily`,priority:.7}}const defaultExcludes=[`/dev-404-page`,`/404`,`/404.html`,`/offline-plugin-app-shell-fallback`];function pageFilter({allPages:a,filterPages:b,excludes:c}){const d=[];if(!Array.isArray(a)||`function`!=typeof b||!Array.isArray(c))throw new Error(`Invalid options passed to page Filter function`);const e=a.filter(a=>{const e=defaultExcludes.some((b,c,d)=>{try{const e=defaultFilterPages(a,b,{minimatch,withoutTrailingSlash,resolvePagePath});return e&&d.splice(c,1),e}catch{throw new Error(`${REPORTER_PREFIX} Error in default page filter`)}});if(e&&d.push(`${REPORTER_PREFIX} Default filter excluded page ${resolvePagePath(a)}`),e)return!e;const f=c.some(c=>{try{return b(a,c,{minimatch,withoutTrailingSlash,resolvePagePath})}catch{throw new Error(`${REPORTER_PREFIX} Error in custom page filter.
If you've customized your excludes you may need to provide a custom "filterPages" function in your config.
https://www.gatsbyjs.com/plugins/gatsby-plugin-sitemap/#api-reference
`)}});return f&&d.push(`${REPORTER_PREFIX} Custom filtering excluded page ${resolvePagePath(a)}`),!(e||f)});return{filteredPages:e,messages:d}}