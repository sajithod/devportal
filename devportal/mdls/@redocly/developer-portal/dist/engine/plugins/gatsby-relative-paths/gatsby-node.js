"use strict";const fs=require("fs"),util=require("util"),pMap=require("p-map"),globby=require("globby"),isTextPath=require("is-text-path"),readFileAsync=util.promisify(fs.readFile),writeFileAsync=util.promisify(fs.writeFile),statAsync=util.promisify(fs.stat),TRANSFORM_CONCURRENCY=10,getRelativePrefix=a=>{const b=a.split("/").length-2;let c=0<b?"../".repeat(b):"./";return c},runtimeScript=`
'use strict';

(function () {
    var path = '/' + window.location.pathname.split('/').filter(p => !!p).slice(0, {}).join('/');
    window.__REDOCLY_PATH_PREFIX__ = path === '/' ? '' : path;
})();
`;async function readFile(a){return(await statAsync(a)).isDirectory()?"":await readFileAsync(a)}const relativizeHtmlFiles=async()=>{const a=await globby(["public/**/*.html"]);await pMap(a,async a=>{const b=await readFile(a);let c=b.toString();if(!c.includes("__REDOCLY_PATH_PREFIX__"))return;const d=getRelativePrefix(a),e=a.split("/").length-2;c=c.replace(/\/__REDOCLY_PATH_PREFIX__\//g,()=>d).replace(/<head>/,()=>`<head><script>${runtimeScript.replace("{}",0<e?"-"+e:"Infinity")}</script>`),await writeFileAsync(a,c)},{concurrency:TRANSFORM_CONCURRENCY})},relativizeJsFiles=async()=>{const a=await globby(["public/**/*.js"]);await pMap(a,async a=>{const b=await readFile(a);let c=b.toString();c.includes("__REDOCLY_PATH_PREFIX__")&&(c=c.replace(/JSON.parse\('((?:\\'|[^'])*?)'\)/g,(a,b)=>b&&-1<b.indexOf("__REDOCLY_PATH_PREFIX__")?b:a).replace(/["']\/?__REDOCLY_PATH_PREFIX__['"]/g,()=>" __REDOCLY_PATH_PREFIX__ ").replace(/\\(["'])\/__REDOCLY_PATH_PREFIX__\/([^'"]*?)(['"])/g,(a,b,c,d)=>`\\${b}${b} + __REDOCLY_PATH_PREFIX__ + ${b}/${c}${d}`).replace(/(["'])\/__REDOCLY_PATH_PREFIX__\/([^'"]*?)(['"])/g,(a,b,c,d)=>` __REDOCLY_PATH_PREFIX__ + ${b}/${c}${d}`),c=`if(typeof __REDOCLY_PATH_PREFIX__ === 'undefined'){__REDOCLY_PATH_PREFIX__=''}${c}`,await writeFileAsync(a,c))},{concurrency:TRANSFORM_CONCURRENCY})},relativizeMiscAssetFiles=async()=>{const a=await globby(["public/**/*","!public/**/*.html","!public/**/*.js","!public/**/*.js.map"]);await pMap(a,async a=>{if(!isTextPath(a))return;const b=await readFile(a);let c=b.toString();if(!c.includes("__REDOCLY_PATH_PREFIX__"))return;let d=a;if(/\/page-data\.json$/.test(a)){const a=JSON.parse(c);a&&a.path&&(d=a.path)}const e=getRelativePrefix(d);c=c.replace(/\/__REDOCLY_PATH_PREFIX__\//g,()=>e),await writeFileAsync(a,c)},{concurrency:TRANSFORM_CONCURRENCY})};exports.onPostBuild=async()=>{await relativizeHtmlFiles(),await relativizeJsFiles(),await relativizeMiscAssetFiles()};