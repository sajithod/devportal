import*as React from"react";import reactStringReplace from"react-string-replace";import{SearchResultItemWrap,SearchResultLink,SearchItemDescription,SearchHighlightedText}from"./searchbox.elements";import{StyledOperationBadge}from"../UserComponents/styled.elements";import{normalizeRedocBadge}from"../../utils";export default class SearchResultItem extends React.Component{componentDidMount(){this.scrollIntoViewIfActive()}componentDidUpdate(){this.scrollIntoViewIfActive()}scrollIntoViewIfActive(){this.props.active&&this.ref&&this.ref.scrollIntoView({block:"end",behavior:"smooth"})}render(){const{query:a,item:b}=this.props,{link:c,label:d,httpVerb:e}=b,f=this.getSearchItemDescription(b),g="string"==typeof f?this.getSearchResultText(f,a):f;return React.createElement(SearchResultLink,{to:c},React.createElement(SearchResultItemWrap,{active:this.props.active,ref:a=>this.ref=a,"data-cy":d},e&&React.createElement(StyledOperationBadge,{type:e},normalizeRedocBadge(e)),this.getSearchResultText(d,a),g&&React.createElement(SearchItemDescription,null,g)))}getSearchResultText(a,b,c=60){const d=a.toLowerCase(),e=b.toLowerCase(),f=d.indexOf(e),g=e.length,h=c-g;return reactStringReplace(this.getSurroundText(f-h/2,f+h/2,a,g),b,(a,b)=>React.createElement(SearchHighlightedText,{key:b},a))}getSurroundText(a,b,c,d){if(0<a&&b<c.length)return"..."+c.slice(a,b)+"...";if(0>a&&b<c.length){const e=b-a+d;return e<c.length?c.slice(0,e)+"...":c.slice(0,e)}if(0<a&&b>c.length){const d=a-(b-c.length);return 0>d?c.slice(0,c.length):"..."+c.slice(d,c.length)}return c}getSearchItemDescription(a){const b=this.props.query;if(a.meta&&1===a.meta.length)return a.meta[0].place?`${a.meta[0].place} ${formatPath(b,a.meta[0].path)}`:"";if(a.meta&&1<a.meta.length){const b={};for(let c of a.meta)c.place&&(b[c.place]=!0);const c=Object.keys(b);return c.length?React.createElement(React.Fragment,null,a.meta.length," matching ",React.createElement("strong",null,formatPlaces(c))):""}return a.content}}function formatPlaces(a){return 1===a.length?a[0]:(a.sort(),a.slice(0,a.length-1).join(", ")+" and "+a[a.length-1])}function formatPath(a,b){return b&&0!==b.length?" \u2192 "+b.join(" \u2192 "):""}