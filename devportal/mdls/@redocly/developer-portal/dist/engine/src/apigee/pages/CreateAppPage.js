import*as React from"react";import{Box,H2,Flex,Alert}from"../../ui";import{Container,Paper,StyledButton}from"../components/common-elements/styled.elements";import TextField from"../components/common-elements/TextField";import ApisList from"../components/ApisList";import CircularProgress from"../components/common-elements/CircularProgress";import{navigate}from"@reach/router";import{APIClientContext}from"../services/APIClientProvider";import{useMutation,useQuery,useQueryClient}from"react-query";import{QUERY_KEY_APPS,QUERY_KEY_PRODUCTS}from"../services/config";import ProtectedRoute from"./ProtectedRoute";export function CreateAppPage(){return React.createElement(ProtectedRoute,{component:React.createElement(CreateAppPageInternal,null)})}function CreateAppPageInternal(){const{apiClient:a}=React.useContext(APIClientContext),[b,c]=React.useState(""),[d,f]=React.useState(!1),[g,h]=React.useState([]),i=useQueryClient(),{isLoading:j,error:k,data:l}=useQuery(QUERY_KEY_PRODUCTS,()=>a?.getApiProducts()),m=useMutation(()=>a.createDeveloperApp(b,g),{onSuccess:()=>{i.invalidateQueries(QUERY_KEY_APPS)}}),n=/^[a-z][a-z0-9._\-$%#\s]*$/gi.test(b),o=100<=b.length;return React.createElement(Box,null,React.createElement(Container,null,React.createElement(Paper,{p:{xs:"1em",large:"2em"},my:"3em"},React.createElement(Box,{maxWidth:{xs:"100%",large:"65%"},mx:"auto"},React.createElement(H2,null,"Create a new app"),React.createElement(Box,{mb:"3em"},React.createElement(TextField,{label:"App name",inputProps:{value:b,onChange:a=>{c(a.target.value),f(!0)}}}),!n&&d&&React.createElement(Alert,{variant:"danger",content:"The app name can include only alphanumeric, space, and the following: _ - . # $ %. Must begin with an alpha character."}),o&&React.createElement(Alert,{variant:"danger",content:"App name is too long"})),j?React.createElement(CircularProgress,null):!k&&l?.apiProduct&&React.createElement(ApisList,{products:l.apiProduct,enabledApis:g,onChange:a=>{h(a||[])}}),k&&React.createElement(Alert,{variant:"danger",content:k.message}),m.error&&React.createElement(Alert,{variant:"danger",content:m.error.message}),React.createElement(Flex,{justifyContent:"flex-end",mt:"3em"},React.createElement(StyledButton,{onClick:()=>{navigate("/apps/")}},"Cancel"),React.createElement(StyledButton,{color:"primary",onClick:async()=>{await m.mutateAsync(),navigate("/apps/")},disabled:m.isLoading||!n||1>g.length},m.isLoading&&React.createElement(CircularProgress,{size:18}),"Create app"))))))}