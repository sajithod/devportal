import*as React from"react";import{useParams}from"@reach/router";import{useMutation,useQuery,useQueryClient}from"react-query";import Dialog from"./common-elements/Dialog";import{H3,Flex,Alert}from"../../ui";import ApisList from"./ApisList";import{StyledButton}from"./common-elements/styled.elements";import{APIClientContext}from"../services/APIClientProvider";import CircularProgress from"./common-elements/CircularProgress";import{QUERY_KEY_APP,QUERY_KEY_PRODUCTS}from"../services/config";export default function EditApiKey(a){const{apiClient:b}=React.useContext(APIClientContext),c=useQueryClient(),d=useParams(),{credential:e,open:f,onClose:g,onOpen:h}=a,i=e.apiProducts.map(a=>a.apiproduct),[j,k]=React.useState(i),[l,m]=React.useState([]),n=useQuery(QUERY_KEY_PRODUCTS,()=>b?.getApiProducts()),{isLoading:o,error:p,mutateAsync:q}=useMutation(()=>b.updateDeveloperAppKey(d.appName,e.consumerKey,j,a.attributes),{onSuccess:()=>{c.invalidateQueries(QUERY_KEY_APP)}}),r=useMutation(()=>b.deleteDeveloperAppKeyProduct(d.appName,e.consumerKey,l),{onSuccess:()=>{c.invalidateQueries(QUERY_KEY_APP)}}),s=j.some(a=>!i.includes(a)),t=o||r.isLoading;return React.createElement(React.Fragment,null,React.createElement(Dialog,{open:f,onOpen:h,onClose:g},React.createElement(React.Fragment,null,React.createElement(H3,{mt:"0",mb:"1em"},"Update key"),!n.isLoading&&!n.error&&React.createElement(ApisList,{products:n.data?.apiProduct,enabledApis:j,onChange:a=>{const b=i.filter(b=>-1===a.indexOf(b));k(a),m(b)}}),n.isLoading&&React.createElement(Flex,{justifyContent:"center"},React.createElement(CircularProgress,null)),p&&React.createElement(Alert,{variant:"danger",content:p.message}),r.error&&React.createElement(Alert,{variant:"danger",content:r.error.message}),React.createElement(Flex,{mt:"2em",justifyContent:"flex-end"},React.createElement(StyledButton,{onClick:g},"Cancel"),React.createElement(StyledButton,{color:"primary",onClick:async()=>{s&&(await q()),0<l.length&&(await r.mutateAsync()),g()},disabled:t||1>j.length||!s&&1>l.length},t&&React.createElement(CircularProgress,{size:18})," Update key")))))}