{"version":3,"sources":["webpack://informed/webpack/universalModuleDefinition","webpack://informed/webpack/bootstrap","webpack://informed/./node_modules/process/browser.js","webpack://informed/./src/debug.js","webpack://informed/./src/ObjectMap.js","webpack://informed/./src/Context.js","webpack://informed/./src/hooks/useFormApi.js","webpack://informed/./src/hooks/useStateWithGetter.js","webpack://informed/./src/utils.js","webpack://informed/./src/hooks/useIsomorphicLayoutEffect.js","webpack://informed/./src/hooks/useCursorPosition.js","webpack://informed/./src/hooks/useUpdateEffect.js","webpack://informed/./src/hooks/useField.js","webpack://informed/./src/HOC/asField.js","webpack://informed/./src/components/form-fields/Text.js","webpack://informed/./src/components/form-fields/TextArea.js","webpack://informed/./src/components/form-fields/Select.js","webpack://informed/./src/components/form-fields/Checkbox.js","webpack://informed/./src/HOC/withRadioGroup.js","webpack://informed/./src/components/form-fields/Radio.js","webpack://informed/./src/components/form-fields/RadioGroup.js","webpack://informed/./src/hooks/useArrayFieldApi.js","webpack://informed/./src/components/form-fields/AddButton.js","webpack://informed/./src/hooks/useArrayFieldItemApi.js","webpack://informed/./src/components/form-fields/RemoveButton.js","webpack://informed/./src/hooks/useArrayField.js","webpack://informed/./src/hooks/useScopedApi.js","webpack://informed/./src/hooks/useFormState.js","webpack://informed/./src/components/Relevant.js","webpack://informed/./src/components/ArrayField.js","webpack://informed/./src/components/FormComponents.js","webpack://informed/./src/components/FormFields.js","webpack://informed/./src/components/form-fields/ArrayField.js","webpack://informed/./src/fieldMap.js","webpack://informed/./src/FormController.js","webpack://informed/./src/components/FormProvider.js","webpack://informed/./src/hooks/useForm.js","webpack://informed/./src/components/Form.js","webpack://informed/./src/components/Scope.js","webpack://informed/./src/components/FormState.js","webpack://informed/./src/hooks/useMultistep.js","webpack://informed/./src/hooks/useMultistepState.js","webpack://informed/./src/hooks/useMultistepApi.js","webpack://informed/./src/hooks/useMultistepStep.js","webpack://informed/./src/components/Multistep.js","webpack://informed/./src/components/FormField.js","webpack://informed/./src/components/SchemaFields.js","webpack://informed/./src/HOC/withFormApi.js","webpack://informed/./src/HOC/withFormState.js","webpack://informed/./src/hooks/useFieldApi.js","webpack://informed/./src/hooks/useFieldState.js","webpack://informed/./src/HOC/withFieldState.js","webpack://informed/./src/HOC/withFieldApi.js","webpack://informed/./src/components/form-fields/Option.js","webpack://informed/./src/index.js","webpack://informed/external \"react\""],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","selectColor","namespace","colors","hash","charCodeAt","Math","abs","formatNodeArgs","config","useColors","color","prefix","split","join","formatBrowserArgs","index","lastC","replace","match","splice","browserColors","createLogger","unshift","matches","namespaces","map","RegExp","slice","some","regex","test","type","__nwjs","localStorage","getItem","error","DEBUG","formatArgs","loadBrowser","debug","Debug","ldtoPath","path","String","filter","Boolean","ldget","obj","defaultValue","result","reduce","res","undefined","parentPath","ldhas","pPath","pathKey","parentObj","ldset","val","arr","Number","isInteger","isArray","ldunset","found","pathToArrayElem","pathArray","cleanup","every","JSON","stringify","ObjectMap","props","keys","ldvalues","pullOut","ldpullAt","FormRegisterContext","React","createContext","register","deregister","setValue","setTouched","setError","update","getField","expectRemoval","getInitialValue","getSavedValue","FormStateContext","FormApiContext","getFullField","getValues","getOptions","setInitialValue","getDerrivedValue","removeSavedState","GroupContext","ArrayFieldStateContext","ArrayFieldApiContext","ArrayFieldItemApiContext","ArrayFieldItemStateContext","MultistepStateContext","MultistepApiContext","MultistepStepContext","useFormApi","useContext","useStateWithGetter","initial","ref","useRef","mounted","useState","state","setState","current","useEffect","getChildDisplayName","WrappedComponent","displayName","yupToFormErrors","yupError","errors","inner","set","message","err","validateYupSchema","schema","values","validateSync","abortEarly","yupToFormError","validateYupField","validateAjvSchema","validate","data","forEach","dataPath","keyword","params","missingProperty","uuidv4","random","toString","debounce","func","wait","later","computeFieldFromProperty","propertyName","uiControl","informedProps","inputProps","uiBefore","uiAfter","oneOf","items","schemaEnum","label","min","minimum","max","maximum","minLength","maxLength","pattern","subProperties","properties","id","field","componentType","options","option","computeFieldsFromSchema","onlyValidateSchema","allOf","propertyOrder","fields","sort","a","b","aIndex","indexOf","bIndex","getSchemaPathFromJsonPath","jsonPath","schemaPath","informedFormat","frmtr","offset","formatter","char","getFormatter","prefixLength","findIndex","v","suffixStart","reverse","formatted","chars","vIndex","start","matchIndex","mi","matching","matchingIndex","pastPrefix","matcher","curChar","createIntlNumberFormatter","locale","opts","numberFormatter","Intl","NumberFormat","decimalChar","formatToParts","find","toNumberString","str","splitStr","stripNonNumeric","float","fraction","numberParts","maskArray","pv","partValue","includes","_","lastDigitIndex","predicate","findLastIndex","maskChar","y","x","source","global","ignoreCase","multiline","nextArr","insert","endOfMask","parser","parseFloat","isNaN","toFloat","useIsomorphicLayoutEffect","window","document","createElement","useLayoutEffect","useCursorPosition","inputRef","maintainCursor","cursor","setCursor","getCursor","cursorOffset","setCursorOffset","getCursorOffset","cursorLoc","setSelectionRange","useUpdateEffect","effect","deps","firstRef","isFirstMount","logger","initializeValue","mask","initialize","initializeMask","format","parse","generateValidationFunction","validationFunc","validationSchema","required","validateRequired","generateOnChange","fieldType","onChange","multiple","setter","target","selected","from","checked","generateOnBlur","onBlur","generateValue","maskedValue","generateFieldType","useField","fieldProps","userRef","asyncValidate","maskWithCursorOffset","initialValue","validateOnChange","validateOnBlur","validateOnMount","asyncValidateOnBlur","maskOnBlur","allowEmptyString","onValueChange","notify","keepState","shadow","step","formController","userRelevant","relevant","keepStateIfRelevant","formatterDependencies","userProps","fieldId","updater","multistepContext","inMultistep","formApi","fieldApiRef","initialRenerRef","fieldObjectRef","valueTouched","getPristine","getDirty","getFormApi","initVal","initTouched","formInitialValue","savedState","touched","setVal","getTheVal","setErr","getErr","setTouch","getTouch","setMaskedValue","maskedValueRef","initialValueRef","fieldRef","prevFieldRef","internalRef","useMemo","relevantFunc","rel","ff","isRelevant","setIsRelevant","getIsRelevant","multistepRelevant","checkRelevant","newRel","reset","getVal","preventUpdate","getStep","formOptions","maskedVal","allowEmptyStrings","selectionStart","fieldValidate","fieldAsyncValidate","fieldApi","getValue","getTouched","getError","getFieldState","dirty","pristine","fieldState","fullField","style","border","borderWidth","borderStyle","borderColor","borderImage","shouldUpdate","render","children","changeHandler","blurHandler","hookedValue","informed","asField","Component","forwardRef","forwardedRef","Text","rest","background","htmlFor","TextArea","Select","selectRef","disabled","Checkbox","withRadioGroup","Consumer","radioGroupApi","radioGroupState","Radio","groupValue","groupOnChange","groupOnBlur","RadioGroup","Provider","groupContext","useArrayFieldApi","AddButton","add","onClick","useArrayFieldItemApi","remove","useArrayField","arrayFieldApiRef","fieldsById","Map","initialVals","keptValues","initialValues","setInitialValues","getInitialValues","initialKeys","setKeys","getKeys","validateWithLength","onChangeHandler","fieldName","emitter","swap","newKeys","console","warn","addWithInitialValue","newInitialValues","arrayFieldItemApi","initVals","arrayFieldItemState","arrayFieldApi","resetKeys","arrayFieldState","wrappedUpdator","fld","useScopedApi","scope","buildScopedFormApi","useFormState","Relevant","when","ArrayField","ArrayFieldWrapper","ArrayFieldItem","scopedApi","lastIndexOf","itemState","getState","initialRender","arrayFieldItemApiValue","arrayFieldItemStateValue","Items","FormComponents","components","fieldMap","comp","FormFields","schemaField","conditional","subSchema","then","conditions","condition","Fragment","select","input","textarea","checkbox","radio","RemoveButton","FormController","subscriptions","ajv","allErrors","ajvValidate","compile","defaultFieldMap","fieldsByName","fieldByName","onScreen","expectedRemovals","pulledOut","savedValues","invalid","submits","validating","submitting","dummyField","getErrors","setStep","back","next","setCurrent","setFormError","submitForm","screenValid","keyDown","getFormState","setValues","resetField","fieldExists","validateField","validated","f","touch","currentError","event","listener","Set","valid","component","Current","prevComponent","nextComponent","notifier","JSPAN","toNotify","empty","entries","has","validateFields","keyCode","preventEnter","preventDefault","dontPreventDefault","alreadyRegistered","magicValue","size","expectedRemoval","includedKey","isExpected","oldName","oldField","FormProvider","formState","useForm","getApi","apiRef","onReset","onSubmit","onSubmitFailure","formControllerOptions","setOptions","mount","setFormState","onResetHandler","onSubmitHandler","onValueHandler","onFailureHandler","Form","renderProp","onKeyDown","Scope","formRegister","scopedFormApi","scopedRegister","buildScopedRegister","FormState","displayState","useMultistep","initialStep","multistepApiRef","stepsByName","nSteps","steps","goal","multistepState","setMultistepState","getMultistepState","multistepApi","getCurrentStep","api","getNumberOfSteps","getNext","nextStep","prev","previous","getPrevious","previousStep","stp","useMultistepState","useMultistepApi","useMultistepStep","goToNext","isCurrent","nextRef","prevRef","relevantRef","multistep","Multistep","context","Step","FormField","SchemaFields","withFormApi","withFormState","useFieldApi","exists","buildFieldApi","useFieldState","updateState","forceUpdate","useCallback","withFieldState","withFieldApi","Option","Input","require"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"informed\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"informed\"] = factory();\n\telse\n\t\troot[\"informed\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\n * \n * I stole most of this code from the debug lib\n * https://github.com/visionmedia/debug\n * \n * Just wanted it to be easy to debug without relying on the dependency!\n */\n\n\n/**\n\t* Selects a color for a debug namespace\n  * @param {String} namespace The namespace string for the for the debug instance to be colored\n  * @param {String} colors color pallette to choose from\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\nfunction selectColor(namespace, colors) {\n  let hash = 0;\n\n  for (let i = 0; i < namespace.length; i++) {\n    hash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return colors[Math.abs(hash) % colors.length];\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatNodeArgs(args, config) {\n\n  const name = config.namespace;\n\n  if (config.useColors) {\n    const c = config.color;\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n    const prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n  } else {\n    args[0] = name + ' ' + args[0];\n  }\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n */\n\nfunction formatBrowserArgs(args, config) {\n\n  args[0] = (config.useColors ? '%c' : '') + config.namespace;\n\n  if (!config.useColors) {\n    return;\n  }\n\n  const c = 'color: ' + config.color;\n\n  // The final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  let index = 0;\n  let lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, match => {\n    if (match === '%%') {\n      return;\n    }\n    index++;\n    if (match === '%c') {\n      // We only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n\nconst browserColors = [\n  '#0000CC',\n  '#0000FF',\n  '#0033CC',\n  '#0033FF',\n  '#0066CC',\n  '#0066FF',\n  '#0099CC',\n  '#0099FF',\n  '#00CC00',\n  '#00CC33',\n  '#00CC66',\n  '#00CC99',\n  '#00CCCC',\n  '#00CCFF',\n  '#3300CC',\n  '#3300FF',\n  '#3333CC',\n  '#3333FF',\n  '#3366CC',\n  '#3366FF',\n  '#3399CC',\n  '#3399FF',\n  '#33CC00',\n  '#33CC33',\n  '#33CC66',\n  '#33CC99',\n  '#33CCCC',\n  '#33CCFF',\n  '#6600CC',\n  '#6600FF',\n  '#6633CC',\n  '#6633FF',\n  '#66CC00',\n  '#66CC33',\n  '#9900CC',\n  '#9900FF',\n  '#9933CC',\n  '#9933FF',\n  '#99CC00',\n  '#99CC33',\n  '#CC0000',\n  '#CC0033',\n  '#CC0066',\n  '#CC0099',\n  '#CC00CC',\n  '#CC00FF',\n  '#CC3300',\n  '#CC3333',\n  '#CC3366',\n  '#CC3399',\n  '#CC33CC',\n  '#CC33FF',\n  '#CC6600',\n  '#CC6633',\n  '#CC9900',\n  '#CC9933',\n  '#CCCC00',\n  '#CCCC33',\n  '#FF0000',\n  '#FF0033',\n  '#FF0066',\n  '#FF0099',\n  '#FF00CC',\n  '#FF00FF',\n  '#FF3300',\n  '#FF3333',\n  '#FF3366',\n  '#FF3399',\n  '#FF33CC',\n  '#FF33FF',\n  '#FF6600',\n  '#FF6633',\n  '#FF9900',\n  '#FF9933',\n  '#FFCC00',\n  '#FFCC33'\n];\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the debug modes\n * @api private\n */\nfunction loadBrowser() {\n  let namespaces;\n  try {\n    namespaces = localStorage.getItem('debug');\n  } catch (error) {\n    // Swallow\n    // XXX (@Qix-) should we be logging these?\n  }\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!namespaces && typeof process !== 'undefined' && 'env' in process) {\n    namespaces = process.env.DEBUG;\n  }\n\n  return { \n    namespaces: namespaces || '', \n    colors: browserColors,\n    useColors: true,\n    formatArgs: formatBrowserArgs\n  };\n} \n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the debug modes\n * @api private\n */\nfunction loadNode() {\n  return { \n    namespaces: process.env.DEBUG || '',\n    colors: [6, 2, 3, 4, 5, 1], \n    useColors: true, \n    formatArgs: formatNodeArgs\n  };\n}\n\n\nfunction createLogger(prefix = null, config) {\n  return function(...args) {\n\n    if (prefix){\n      args.unshift(prefix);\n    }\n\n    // Create a namespace regex for each namespace\n    const matches = config.namespaces.split(',').map(( namespace )=>{\n      // Remove wildcard and add to regex if wildcard\n      if( namespace[namespace.length - 1] === '*' ){\n        return new RegExp('^' + namespace.slice(0, namespace.length-1) + '.*' + '$');\n      }\n      return new RegExp('^' + namespace + '$');\n    });\n    \n    // Does the prefix match a namespace\n    const match = matches.some((regex)=>{\n      return regex.test(prefix);\n    });\n\n    const conf = {\n      color: selectColor( prefix, config.colors ),\n      namespace: prefix, \n      useColors: config.useColors\n    };\n\n    if (process.env.NODE_ENV !== 'production' && match ) {\n      config.formatArgs(args, conf);\n      console.log(...args);\n    }\n  };\n}\n\nfunction nodeLogger(prefix) {\n  return createLogger(prefix, loadNode());\n}\n\nfunction browserLogger(prefix) {\n  return createLogger(prefix, loadBrowser());\n}\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n  module.exports = browserLogger;\n} else {\n  module.exports = nodeLogger;\n}","import Debug from './debug';\nconst debug = Debug('informed:ObjMap' + '\\t');\n\n/* -------------------- toPath -------------------- */\n\nconst ldtoPath = (path = '') => {\n  return String.prototype.replace\n    .call(path, /\\['(.+?)'\\]/g, '.$1')\n    .split(/[,[\\].]+?/)\n    .filter(Boolean);\n};\n\n/* --------------------- get --------------------- */\n\nconst ldget = (obj, path = '', defaultValue) => {\n  const result = String.prototype.replace\n    .call(path, /\\['(.+?)'\\]/g, '.$1')\n    .split(/[,[\\].]+?/)\n    .filter(Boolean)\n    .reduce(\n      (res, key) => (res !== null && res !== undefined ? res[key] : res),\n      obj\n    );\n  return result === undefined || result === obj ? defaultValue : result;\n};\n\n/* --------------------- has --------------------- */\n\n// foo -->\n// foo.bar --> foo\n// foo.bar[3] --> foo.bar\n// foo.bar.baz[2].raz.taz[5].laz --> foo.bar.baz[2].raz.taz[5]\nconst parentPath = path => {\n  return `.${path}`.replace(/(.*)[.[].*/, '$1').replace(/\\./, '');\n};\n\n// foo --> foo\n// foo.bar --> bar\n// foo.bar[3] --> [3]\n// foo.bar.baz[2].raz.taz[5].laz --> laz\nconst pathKey = path => {\n  return path.replace(parentPath(path), '').replace(/\\./, '');\n};\n\nconst ldhas = (obj, path) => {\n  const pPath = parentPath(path);\n  const key = pathKey(path);\n  // If we have parent path then get the object at that location\n  // .. otherwise its the root object\n  const parentObj = pPath ? ldget(obj, pPath) : obj;\n  // If its [3] turn key into 3\n  return !!(\n    parentObj &&\n    Object.hasOwnProperty.call(parentObj, key.replace(/\\[(.*)\\]/, '$1'))\n  );\n};\n\n/* --------------------- set --------------------- */\n\nconst ldset = (obj, path = '', val) => {\n  String.prototype.replace\n    .call(path, /\\['(.+?)'\\]/g, '.$1')\n    .split(/[,[\\].]+?/)\n    .filter(Boolean)\n    .reduce((res, key, i, arr) => {\n      //console.log('RES', res, 'Key', key, 'I', i, 'Arr', arr, 'OBJ', obj);\n      // At the leaf set the value\n      if (i === arr.length - 1) {\n        res[key] = val;\n        return res[key];\n      }\n      // Initialize to new array or object if needed\n      if (res[key] === undefined) {\n        if (Number.isInteger(+arr[i + 1])) {\n          res[key] = [];\n        } else {\n          res[key] = {};\n        }\n        return res[key];\n      }\n      // Exception for if the value is changeing to an array\n      if (Number.isInteger(+arr[i + 1]) && !Array.isArray(res[key])) {\n        res[key] = [];\n      }\n      //TODO exception for if object ??\n\n      // Otherwise keep whats there\n      return res[key];\n    }, obj);\n};\n\n/* --------------------- unset --------------------- */\n\nconst ldunset = (obj, path = '') => {\n  let found = false;\n  String.prototype.replace\n    .call(path, /\\['(.+?)'\\]/g, '.$1')\n    .split(/[,[\\].]+?/)\n    .filter(Boolean)\n    .reduce((res, key, i, arr) => {\n      // Base case res is undefined\n      if (res === undefined) {\n        return res;\n      }\n      // At the leaf delete the value\n      if (i === arr.length - 1) {\n        delete res[key];\n        found = true;\n        return res[key];\n      }\n      // Otherwise keep going\n      return res[key];\n    }, obj);\n  return found;\n};\n\n/* --------------------- pullAt --------------------- */\n\nconst ldpullAt = (obj, path = '') => {\n  let pulled;\n  String.prototype.replace\n    .call(path, /\\['(.+?)'\\]/g, '.$1')\n    .split(/[,[\\].]+?/)\n    .filter(Boolean)\n    .reduce((res, key, i, arr) => {\n      // Base case res is undefined\n      if (res === undefined) {\n        return res;\n      }\n      // At the leaf delete the value\n      if (i === arr.length - 1 && Array.isArray(res)) {\n        // Pull out one value at index ( key )\n        pulled = res.splice(key, 1);\n        return res[key];\n      }\n      // Otherwise keep going\n      return res[key];\n    }, obj);\n  return pulled;\n};\n\n/* --------------------- values --------------------- */\n\nconst ldvalues = (obj = {}) => {\n  const props = Object.keys(obj);\n  return props.map(key => obj[key]);\n};\n\nconst pathToArrayElem = path => {\n  const pathArray = ldtoPath(path);\n  return Number.isInteger(+pathArray[pathArray.length - 1]);\n};\n\nclass ObjectMap {\n  static empty(object) {\n    return ldvalues(object).length === 0;\n  }\n\n  static get(object, path) {\n    const val = ldget(object, path);\n    //debug('GOT', path, val);\n    return val;\n  }\n\n  static has(object, path) {\n    return ldhas(object, path);\n  }\n\n  static set(object, path, value) {\n    if (value !== undefined) {\n      debug('SETTING', path, value);\n      ldset(object, path, value);\n    } else {\n      // Setting things to undefined in informed is special!\n      // so in this else statement we deal with that\n\n      // If the path is to an array leaf then we want to set to undefined\n      // Example:\n      // path = 'foo.bar[2]'\n      // foo.bar = [ 'baz', 'raz', 'taz' ]\n      // setting taz to undefined   ^^^\n      if (pathToArrayElem(path) && ObjectMap.get(object, path) !== undefined) {\n        debug('Special case SETTING', path, 'to undefined');\n        ldset(object, path, undefined);\n        let pathArray = ldtoPath(path);\n        pathArray = pathArray.slice(0, pathArray.length - 1);\n        cleanup(object, pathArray, false);\n      }\n      // Only delete the field if it needs to be deleted and its not a path to an array ( array leaf )\n      // Example:\n      // path = 'foo.bar'\n      // foo.bar = 'baz'\n      // removing foo.bar from the object completley\n      else if (\n        !pathToArrayElem(path) &&\n        ObjectMap.get(object, path) !== undefined\n      ) {\n        debug('Special case REMOVING', path, 'from object completley');\n        ObjectMap.delete(object, path);\n      }\n    }\n  }\n\n  static delete(object, path) {\n    debug('DELETE', path);\n\n    // Special case for arrays\n    if (pathToArrayElem(path)) {\n      debug('ARRAY', path);\n      //ldunset(object, path);\n      this.pullOut(object, path);\n    } else {\n      ldunset(object, path);\n    }\n\n    let pathArray = ldtoPath(path);\n    pathArray = pathArray.slice(0, pathArray.length - 1);\n    cleanup(object, pathArray);\n  }\n\n  // Very important ;)\n  static pullOut(object, path) {\n    // Get the path to the array\n    let pathArray = ldtoPath(path);\n    // debug('PathArray1', pathArray);\n    const index = pathArray[pathArray.length - 1];\n    pathArray = pathArray.slice(0, pathArray.length - 1);\n    debug('Pulling out:', pathArray, 'index', index);\n    // Get the array\n    const arr = ldget(object, pathArray);\n    debug('Array', arr);\n    // Pull out of array\n    if (Array.isArray(arr)) {\n      ldpullAt(arr, index);\n    }\n    cleanup(object, pathArray);\n  }\n}\n\nfunction cleanup(obj, path, pull = true) {\n  // Base case no path left\n  if (path.length === 0) {\n    return;\n  }\n\n  const object = ldget(obj, path);\n\n  // Clean up undefined from array\n  // if (Array.isArray(object) && pull) {\n  //   ldpull(object, undefined);\n  // }\n\n  // Delete object if its empty\n  if (\n    Array.isArray(object)\n      ? object.every(e => e == null)\n      : JSON.stringify(object) === '{}'\n  ) {\n    ldunset(obj, path);\n  }\n  // Recur\n  cleanup(obj, path.slice(0, path.length - 1));\n}\n\nexport default ObjectMap;\n","import React from 'react';\n\nconst FormRegisterContext = React.createContext({\n  register: () => {},\n  deregister: () => {},\n  setValue: () => {},\n  setTouched: () => {},\n  setError: () => {},\n  update: () => {},\n  getField: () => {},\n  expectRemoval: () => {},\n  getInitialValue: () => {},\n  getSavedValue: () => {}\n});\n\nconst FormStateContext = React.createContext({});\nconst FormApiContext = React.createContext({\n  getFullField: () => {},\n  getValues: () => {},\n  getOptions: () => ({}),\n  setInitialValue: () => {},\n  getInitialValue: () => {},\n  getDerrivedValue: () => {},\n  getSavedValue: () => {},\n  removeSavedState: () => {}\n});\nconst GroupContext = React.createContext();\nconst SelectContext = React.createContext();\n\nconst ArrayFieldStateContext = React.createContext();\nconst ArrayFieldApiContext = React.createContext();\nconst ArrayFieldItemApiContext = React.createContext();\nconst ArrayFieldItemStateContext = React.createContext();\nconst MultistepStateContext = React.createContext();\nconst MultistepApiContext = React.createContext();\nconst MultistepStepContext = React.createContext();\n\nexport {\n  FormRegisterContext,\n  FormStateContext,\n  FormApiContext,\n  GroupContext,\n  SelectContext,\n  ArrayFieldApiContext,\n  ArrayFieldStateContext,\n  ArrayFieldItemApiContext,\n  ArrayFieldItemStateContext,\n  MultistepStateContext,\n  MultistepApiContext,\n  MultistepStepContext\n};\n","import React, { useContext } from 'react';\nimport { FormApiContext } from '../Context';\n\nfunction useFormApi() {\n  const formApi = useContext(FormApiContext);\n  return formApi;\n}\n\nexport default useFormApi;\n","import React, { useState, useRef, useEffect } from 'react';\n\n// TODO figure out if this is bad?\n// https://github.com/facebook/react/issues/14543\nfunction useStateWithGetter(initial) {\n  const ref = useRef();\n  const mounted = useRef(true);\n  const [state, setState] = useState(initial);\n  ref.current = state;\n  const set = value => {\n    ref.current = value;\n    if (mounted.current) setState(value);\n  };\n  const get = () => {\n    return ref.current;\n  };\n  useEffect(() => {\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return [state, set, get];\n}\n\nexport default useStateWithGetter;\n","import ObjectMap from './ObjectMap';\n\nexport const getChildDisplayName = WrappedComponent => {\n  // fix for \"memo\" components\n  if (WrappedComponent.type && WrappedComponent.type.name) {\n    return WrappedComponent.type.name;\n  }\n\n  return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n};\n\nexport const yupToFormErrors = yupError => {\n  const errors = {};\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      // console.log(yupError.path);\n      ObjectMap.set(errors, yupError.path, yupError.message);\n      return;\n    }\n    for (let err of yupError.inner) {\n      if (!ObjectMap.get(errors, err.path)) {\n        // console.log(errors, err.path, err.message);\n        ObjectMap.set(errors, err.path, err.message);\n      }\n    }\n  }\n  return errors;\n};\n\nexport const validateYupSchema = (schema, values) => {\n  try {\n    schema.validateSync(values, { abortEarly: false });\n  } catch (e) {\n    const formErrors = yupToFormErrors(e);\n    return formErrors;\n  }\n};\n\nexport const yupToFormError = yupError => {\n  if (yupError.inner) {\n    if (yupError.inner.length === 0) {\n      return;\n    }\n    const err = yupError.inner[0];\n    return err.message;\n  }\n};\n\nexport const validateYupField = (schema, value) => {\n  try {\n    schema.validateSync(value, { abortEarly: false });\n  } catch (e) {\n    return yupToFormError(e);\n  }\n};\n\nexport const validateAjvSchema = (validate, data) => {\n  validate(data);\n  const errors = {};\n  if (validate.errors) {\n    validate.errors.forEach(({ message, dataPath, keyword, params }) => {\n      let path = dataPath;\n\n      // Special case for required\n      if (keyword === 'required') {\n        path = `${path}.${params.missingProperty}`;\n      }\n\n      // Get rid of leading dot\n      path = path.replace('.', '');\n      // console.log('PATH', path, message);\n      // TODO get message from informed if present\n      ObjectMap.set(errors, path, message);\n    });\n  }\n  return errors;\n};\n\n// https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\nexport const uuidv4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const debounce = (func, wait) => {\n  let timeout;\n\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};\n\nexport const computeFieldFromProperty = (propertyName, property, prefix) => {\n  const {\n    'ui:control': uiControl,\n    'informed:props': informedProps,\n    'input:props': inputProps,\n    'ui:before': uiBefore,\n    'ui:after': uiAfter,\n    oneOf,\n    items,\n    enum: schemaEnum,\n    title: label,\n    minimum: min,\n    maximum: max,\n    minLength,\n    maxLength,\n    pattern,\n    type,\n    properties: subProperties\n  } = property;\n\n  // Set Id if not passed\n  let id = uuidv4();\n  if (inputProps && inputProps.id) {\n    id = inputProps.id;\n  }\n\n  const field = {\n    componentType: uiControl,\n    field: prefix ? `${prefix}.${propertyName}` : propertyName,\n    type,\n    uiBefore,\n    uiAfter,\n    properties: type === 'object' ? subProperties : undefined,\n    items: type === 'array' ? items : undefined,\n    props: {\n      label: label,\n      id,\n      min,\n      max,\n      minLength,\n      maxLength,\n      pattern,\n      ...informedProps,\n      ...inputProps\n    }\n  };\n\n  if (oneOf) {\n    const options = property.oneOf.map(option => {\n      const { 'input:props': inputProps = {} } = option;\n      return {\n        value: option.const,\n        label: option.title,\n        ...inputProps\n      };\n    });\n    field.props.options = options;\n  }\n\n  if (schemaEnum) {\n    const options = property.enum.map(val => {\n      return {\n        value: val,\n        label: val\n      };\n    });\n    field.props.options = options;\n  }\n\n  if (items && items.oneOf) {\n    const options = items.oneOf.map(option => {\n      const { 'input:props': inputProps = {} } = option;\n      return {\n        value: option.const,\n        label: option.title,\n        ...inputProps\n      };\n    });\n    field.props.options = options;\n  }\n\n  return field;\n};\n\nexport const computeFieldsFromSchema = (schema, onlyValidateSchema, prefix) => {\n  if (!schema || onlyValidateSchema) {\n    return [];\n  }\n\n  // Grab properties and items off of schema\n  const { properties = {}, allOf, propertyOrder = [] } = schema;\n\n  if (Object.keys(properties).length > 0) {\n    // Attempt to generate fields from properties\n    const fields = Object.keys(properties)\n      .sort((a, b) => {\n        const aIndex = propertyOrder.indexOf(a);\n        const bIndex = propertyOrder.indexOf(b);\n\n        return (\n          (aIndex > -1 ? aIndex : propertyOrder.length + 1) -\n          (bIndex > -1 ? bIndex : propertyOrder.length + 1)\n        );\n      })\n      .map(propertyName => {\n        const property = properties[propertyName];\n\n        const field = computeFieldFromProperty(propertyName, property, prefix);\n\n        return field;\n      });\n\n    // Check for all of ( we have conditionals )\n    if (allOf) {\n      fields.push({\n        componentType: 'conditionals',\n        // Each element of the \"allOf\" array is a conditional\n        allOf: allOf\n      });\n    }\n\n    return fields;\n  }\n\n  return [];\n};\n\n// Examples\n// field = \"name\" ---> properties.name\n// field = \"brother.name\" ---> properties.brother.properties.name\n// field = \"brother.siblings[1].friend.name\" ---> properties.brother.properties.siblings.items[1].properties.friend.properties.name\nexport const getSchemaPathFromJsonPath = jsonPath => {\n  // Convert\n  let schemaPath = jsonPath\n    .replace(/\\./g, '.properties.')\n    .replace(/\\[/g, '.itmes[');\n  // Add first properties\n  schemaPath = `properties.${schemaPath}`;\n  return schemaPath;\n};\n\n/* -------------------------- Formatter ----------------------------- */\n\nconst getFormatter = (formatter, value) => {\n  // If mask is a string turn it into an array;\n  if (typeof formatter === 'string') {\n    return formatter.split('').map(char => {\n      if (char === '#') {\n        return /\\d/;\n      }\n\n      if (char === '*') {\n        return /[\\w]/;\n      }\n\n      return char;\n    });\n  }\n\n  // If mask is a function use it to genreate current mask\n  if (typeof formatter === 'function') {\n    return formatter(value);\n  }\n\n  if (Array.isArray(formatter)) {\n    return formatter;\n  }\n\n  // Should never make it here throw\n  throw new Error('Formatter must be string, array, or function');\n};\n\nconst matchingIndex = (a, b) => {\n  let i = 0;\n  let mi = -1;\n  let matching = true;\n  // a = \"+1 \"\n  // b = \"+12\"\n  while (matching && i < a.length) {\n    if (a[i] == b[i]) {\n      mi = i;\n    } else {\n      matching = false;\n    }\n\n    i = i + 1;\n  }\n\n  return mi;\n};\n\nexport const informedFormat = (val, frmtr) => {\n  // console.log('Formatting', val);\n\n  // Null check\n  if (!val) {\n    return {\n      val,\n      offset: 0\n    };\n  }\n\n  const value = `${val}`;\n\n  // Generate formatter array\n  const formatter = getFormatter(frmtr, value);\n\n  // Start to fill in the array\n  // Example: phone formatter\n  // formatter =['+', '1', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]\n  // value examples:\n  // \"1231231234 ----> +1 123-123-1234\n  // \"+\" \t\t\t\t ----> +\n  // \"+1\" \t\t\t ----> +1\n  // \"+2\"\t\t\t\t ----> +1 2\n  // \"1\"\t\t\t\t ----> +1 1\n  // \"1234\"\t\t\t ----> +1 123-4\n  // \"123a\"      ----> +1 123\n\n  // Determine prefix length and suffix start\n  const prefixLength = formatter.findIndex(v => typeof v != 'string');\n  const suffixStart =\n    formatter.length -\n    [...formatter].reverse().findIndex(v => typeof v != 'string');\n\n  // Formatted value\n  let formatted = [];\n\n  // The characters from the current value\n  const chars = value.split('');\n\n  // To track the value index during itteration\n  let vIndex = 0;\n\n  let start = 0;\n\n  // If the value matches part of the prefix take it out\n  // Example prefix = \"+1 \" value = [\"+1 123-123-1234\", \"+12\", \"+2\"]\n  const matchIndex = matchingIndex(\n    formatter.slice(0, prefixLength),\n    chars.slice(0, prefixLength)\n  );\n  // console.log('Matching index', matchIndex);\n  if (matchIndex > -1) {\n    //vIndex = prefixLength;\n    vIndex = matchIndex + 1;\n    formatted = formatted.concat(formatter.slice(0, matchIndex + 1));\n    start = matchIndex + 1;\n  }\n  // Example prefix = \"+1 \" value=[\"1\", \"1234\"]\n  if (matchIndex < 0) {\n    // Start past the prefix\n    formatted = formatted.concat(formatter.slice(0, prefixLength));\n    start = prefixLength;\n  }\n\n  // console.log('start', start, formatted);\n  // console.log('PREFIX_LENGTHT', prefixLength);\n  // console.log('SUFIX_START', suffixStart);\n  // console.log('FORMATTER_LENGTH', formatter.length);\n\n  // To track if we have made it past the prefix\n  let pastPrefix = false;\n\n  // Fill in the stuff\n  for (let i = start; i < formatter.length; i++) {\n    // Get current formatter location matcher\n    const matcher = formatter[i];\n\n    // We get past the prefix if matcher is not a string\n    if (!pastPrefix && typeof matcher != 'string') {\n      pastPrefix = true;\n    }\n\n    // Chec to see if there is more value to look at\n    if (vIndex != chars.length) {\n      // Get the current value character\n      const curChar = chars[vIndex];\n\n      // Special case for function\n      if (typeof matcher === 'function') {\n        formatted.push(matcher(curChar));\n        vIndex = vIndex + 1;\n      } else {\n        // If type is string normal compare otherwise regex compare\n        const match =\n          typeof matcher === 'string'\n            ? matcher === curChar\n            : matcher.test(curChar);\n\n        // If the current character of the value matches and matcher is a string\n        // \"1\" === \"1\"\n        if (match && typeof matcher === 'string') {\n          formatted.push(matcher);\n          //if( pastPrefix ){\n          vIndex = vIndex + 1;\n          //}\n        }\n        // If the current character does not match and matcher is a stirng\n        // \"1\" != \"+\"\n        else if (!match && typeof matcher === 'string') {\n          // Special check for 123a ---> dont want \"+1 123-\"\n          // Special check for 1234 ---> DO want \"+1 123-4\"\n          if (vIndex != chars.length) formatted.push(matcher);\n        }\n        // If the current character matches and the matcher is not a string\n        // /\\d/.test(\"2\")\n        else if (match && typeof matcher != 'string') {\n          formatted.push(curChar);\n          vIndex = vIndex + 1;\n        }\n        // If the current character does NOT match and the matecer is regex\n        // /\\d/.test(\"a\")\n        else if (!match && typeof matcher != 'string') {\n          // Throw out this value\n          vIndex = vIndex + 1;\n          i = i - 1;\n        }\n      }\n    } else {\n      // If mattcher is a string and we are at suffix keep going\n      if (typeof matcher === 'string' && i >= suffixStart) {\n        formatted.push(matcher);\n      } else {\n        // Otherwise we want to break out\n        break;\n      }\n    }\n  }\n\n  return {\n    value: formatted.join(''),\n    offset: value ? formatted.length - value.length : 0\n  };\n};\n\n/* --------------------------------------- createIntlNumberFormatter --------------------------------------- */\n\nexport const createIntlNumberFormatter = (locale, opts) => {\n  const numberFormatter = new Intl.NumberFormat(locale, opts);\n  const numberFormatterWithoutOpts = new Intl.NumberFormat(locale);\n  const decimalChar =\n    numberFormatterWithoutOpts\n      .formatToParts(0.1)\n      .find(({ type }) => type === 'decimal')?.value ?? '.';\n\n  function isRegexEqual(x, y) {\n    return (\n      x instanceof RegExp &&\n      y instanceof RegExp &&\n      x.source === y.source &&\n      x.global === y.global &&\n      x.ignoreCase === y.ignoreCase &&\n      x.multiline === y.multiline\n    );\n  }\n\n  function findLastIndex(arr, predicate) {\n    let l = arr.length;\n    // eslint-disable-next-line no-plusplus\n    while (l--) {\n      if (predicate(arr[l])) return l;\n    }\n    return -1;\n  }\n\n  function insert(arr, index, value) {\n    const nextArr = [...arr];\n\n    if (Array.isArray(value)) {\n      nextArr.splice(index, 0, ...value);\n    } else {\n      nextArr.splice(index, 0, value);\n    }\n\n    return nextArr;\n  }\n\n  function stripNonNumeric(str) {\n    return `${str}`.replace(/\\D/g, '');\n  }\n\n  function toNumberString(str) {\n    return `${str}`\n      .split(decimalChar)\n      .map(splitStr => stripNonNumeric(splitStr))\n      .join('.');\n  }\n\n  function toFloat(str) {\n    if (typeof str === 'number') {\n      return str;\n    }\n\n    const float = parseFloat(toNumberString(str));\n\n    return !Number.isNaN(float) ? float : undefined;\n  }\n\n  function mask(value) {\n    const float = toNumberString(value);\n\n    // if (!float) {\n    //   return [];\n    // }\n\n    const fraction = `${float}`.split('.')[1];\n    const numberParts = numberFormatter.formatToParts(Number(float));\n\n    if (fraction === '0') {\n      numberParts.push(\n        { type: 'decimal', value: decimalChar },\n        { type: 'fraction', value: fraction }\n      );\n    }\n\n    let maskArray = numberParts.reduce((pv, { type, value: partValue }) => {\n      if (['decimal', 'fraction'].includes(type) && fraction == null) {\n        return pv;\n      }\n\n      if (['integer', 'fraction'].includes(type)) {\n        return [\n          ...pv,\n          ...partValue\n            .split('')\n            .filter(\n              (_, index) =>\n                type === 'fraction' ? index < fraction.length : true\n            )\n            .map(() => /\\d/)\n        ];\n      }\n\n      if (type === 'currency') {\n        return [...pv, ...partValue.split('')];\n      }\n\n      return [...pv, partValue];\n    }, []);\n\n    let lastDigitIndex = findLastIndex(maskArray, maskChar => {\n      return isRegexEqual(maskChar, /\\d/);\n    });\n\n    if (\n      maskArray.indexOf(decimalChar) === -1 &&\n      `${value}`.indexOf(decimalChar) !== -1\n    ) {\n      maskArray = insert(maskArray, lastDigitIndex + 1, [decimalChar, '[]']);\n      lastDigitIndex += 2; // we want to insert a new number after the decimal\n    }\n\n    const endOfMask = maskArray.slice(lastDigitIndex + 1).join('');\n    maskArray = [...maskArray.slice(0, lastDigitIndex + 1), endOfMask];\n\n    return maskArray;\n  }\n\n  const parser = value => {\n    if (value == null) {\n      return undefined;\n    }\n\n    return toFloat(value);\n  };\n\n  return { formatter: mask, parser };\n};\n","import { useEffect, useLayoutEffect } from 'react';\n\n// React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser.\n// @see https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\nconst useIsomorphicLayoutEffect =\n  typeof window !== 'undefined' &&\n  typeof window.document !== 'undefined' &&\n  typeof window.document.createElement !== 'undefined'\n    ? useLayoutEffect\n    : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n","import useLayoutEffect from './useIsomorphicLayoutEffect';\nimport useStateWithGetter from './useStateWithGetter';\n\nconst useCursorPosition = ({ value, inputRef, maintainCursor = true }) => {\n  const [cursor, setCursor, getCursor] = useStateWithGetter(0);\n\n  const [cursorOffset, setCursorOffset, getCursorOffset] = useStateWithGetter(\n    0\n  );\n\n  useLayoutEffect(\n    () => {\n      if (inputRef.current != null && getCursor()) {\n        // inputRef.current.selectionEnd = getCursor() + getCursorOffset();\n        const cursorLoc = getCursor() + getCursorOffset();\n        // Only offset if we need to\n        if (getCursorOffset() != 0 && maintainCursor) {\n          inputRef.current.setSelectionRange(cursorLoc + 1, cursorLoc + 1);\n        } else if (maintainCursor) {\n          inputRef.current.setSelectionRange(cursorLoc, cursorLoc);\n        }\n      }\n    },\n    [value]\n  );\n\n  return {\n    setCursorOffset,\n    setCursor,\n    cursor,\n    getCursor,\n    cursorOffset\n  };\n};\n\nexport default useCursorPosition;\n","import { useRef, useEffect } from 'react';\n\n// https://reactjs.org/docs/hooks-faq.html#can-i-run-an-effect-only-on-updates\n\n/**\n *\n * Acts as a react useEffect that does not run on first render.\n *\n * @example\n * useUpdateEffect(()=>{...}, [foo])\n * 1st Render: NO CALL\n * foo changes: GETS CALLED\n *\n */\nconst useUpdateEffect = (effect, deps) => {\n  const firstRef = useRef(true);\n  const isFirstMount = firstRef.current;\n  useEffect(() => {\n    if (!isFirstMount) {\n      return effect();\n    } else {\n      firstRef.current = false;\n    }\n  }, deps);\n};\n\nexport default useUpdateEffect;\n","import React, { useState, useEffect, useContext, useRef, useMemo } from 'react';\nimport { FormRegisterContext, MultistepStepContext } from '../Context';\nimport useFormApi from './useFormApi';\nimport useStateWithGetter from './useStateWithGetter';\nimport { validateYupField, uuidv4, informedFormat } from '../utils';\n\nimport Debug from '../debug';\nimport useLayoutEffect from './useIsomorphicLayoutEffect';\nimport ObjectMap from '../ObjectMap';\nimport useCursorPosition from './useCursorPosition';\nimport useUpdateEffect from './useUpdateEffect';\nconst logger = Debug('informed:useField' + '\\t');\n\n// localStorage.debug = 'informed:.*' << HOW to enable debuging\n\nconst initializeValue = (value, mask, formatter, parser, initialize) => {\n  if (value != null) {\n    // Call users initialize if it was passed\n    if (initialize) {\n      return initialize(value);\n    }\n    // Call mask if it was passed\n    if (mask) {\n      return mask(value);\n    }\n    if (formatter && !parser) {\n      const res = informedFormat(value, formatter);\n      return res.value;\n    }\n    return value;\n  }\n  // Not needed but called out specifically\n  return undefined;\n};\n\nconst initializeMask = (value, format, parse, formatter) => {\n  // Call format and parse if they were passed\n  if (format && parse) {\n    return format(value);\n  }\n\n  // Call formatter\n  if (formatter) {\n    const res = informedFormat(value, formatter);\n    return res.value;\n  }\n\n  return value;\n};\n\nconst generateValidationFunction = (\n  validationFunc,\n  validationSchema,\n  { required }\n) => {\n  // We dont want a validation function if there was nothing passed\n  if (validationFunc || validationSchema) {\n    return (val, values) => {\n      if (validationSchema) {\n        return validateYupField(validationSchema, val);\n      }\n      if (validationFunc) {\n        return validationFunc(val, values);\n      }\n    };\n  }\n  if (required) {\n    return val => {\n      return validateRequired(val, required);\n    };\n  }\n};\n\nconst generateOnChange = ({ fieldType, setValue, onChange, multiple, ref }) => {\n  let setter = e => setValue(e);\n\n  if (\n    fieldType === 'text' ||\n    fieldType === 'textArea' ||\n    fieldType === 'number'\n  ) {\n    setter = e => setValue(e.target.value, e);\n  }\n\n  if (fieldType === 'select') {\n    setter = () => {\n      let selected = Array.from(ref.current)\n        .filter(option => option.selected)\n        .map(option => option.value);\n\n      setValue(multiple ? selected : selected[0] || '');\n    };\n  }\n\n  if (fieldType === 'checkbox') {\n    setter = e => {\n      setValue(e.target.checked);\n      if (onChange) {\n        onChange(e);\n      }\n    };\n  }\n\n  return e => {\n    setter(e);\n  };\n};\n\nconst generateOnBlur = ({ setTouched, onBlur }) => {\n  return e => {\n    setTouched(true);\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n};\n\nconst generateValue = ({ fieldType, maskedValue, multiple, value }) => {\n  switch (fieldType) {\n    case 'text':\n    case 'number':\n      return !maskedValue && maskedValue !== 0 ? '' : maskedValue;\n    case 'textArea':\n      return !maskedValue ? '' : maskedValue;\n    case 'select':\n      return value || (multiple ? [] : '');\n    case 'checkbox':\n      return !!value;\n    default:\n      return value;\n  }\n};\n\nconst generateFieldType = fieldType => {\n  switch (fieldType) {\n    case 'text':\n      return fieldType;\n    case 'number':\n      return fieldType;\n    case 'checkbox':\n      return fieldType;\n    default:\n      return;\n  }\n};\n\nconst validateRequired = (value, required) => {\n  if (required && (value == null || value === '')) {\n    return typeof required === 'string' ? required : 'This field is required';\n  }\n};\n\nfunction useField(fieldProps = {}, userRef) {\n  // Pull props off of field props\n  const {\n    field,\n    validate: validationFunc,\n    asyncValidate,\n    validationSchema,\n    mask,\n    maskWithCursorOffset,\n    format,\n    parse,\n    formatter,\n    parser,\n    initialValue,\n    validateOnChange,\n    validateOnBlur,\n    validateOnMount,\n    asyncValidateOnBlur,\n    maskOnBlur,\n    allowEmptyString,\n    onValueChange,\n    notify,\n    keepState,\n    maintainCursor,\n    debug,\n    shadow,\n    step,\n    fieldType,\n    multiple,\n    onChange,\n    onBlur,\n    formController,\n    relevant: userRelevant,\n    required,\n    keepStateIfRelevant,\n    initialize,\n    formatterDependencies = [],\n    ...userProps\n  } = fieldProps;\n\n  // Create ref to a field id\n  const [fieldId] = useState(uuidv4());\n\n  // Grab the form register context\n  let updater = useContext(FormRegisterContext);\n\n  // Grab multistepContext\n  const multistepContext = useContext(MultistepStepContext);\n  const inMultistep = multistepContext || keepStateIfRelevant;\n\n  // Grab the form api\n  let formApi = useFormApi();\n\n  // Create ref to fieldApi\n  const fieldApiRef = useRef();\n\n  // Create initial render ref\n  const initialRenerRef = useRef(true);\n\n  // Create ref to fieldObject\n  const fieldObjectRef = useRef();\n\n  // Create ref for pristine and dirty\n  const valueTouched = useRef(false);\n\n  // Getters for value ref\n  const getPristine = () => {\n    return !valueTouched.current;\n  };\n\n  const getDirty = () => {\n    return valueTouched.current;\n  };\n\n  // If the form Controller was passed in then use that instead\n  if (formController) {\n    updater = formController.updater;\n    formApi = formController.getFormApi();\n  }\n\n  // Generate validation function\n  const validate = generateValidationFunction(\n    validationFunc,\n    validationSchema,\n    { required }\n  );\n\n  // Grab possible initial value from form\n  const [formInitialValue] = useState(() => updater.getInitialValue(field));\n\n  // We might have keep state so check for it!\n  const savedState = updater.getSavedValue(field);\n\n  // Create Initial Values\n  let initVal;\n  let initTouched;\n\n  // We do these checks because initial value could be false or zero!!\n  if ((keepState || inMultistep) && savedState) {\n    logger(`Setting field ${name}'s kept state`, savedState);\n    initVal = savedState.value;\n    initTouched = savedState.touched;\n    // Remove the saved state\n    formApi.removeSavedState(name);\n  } else if (initialValue != undefined) {\n    initVal = initialValue;\n  } else {\n    initVal = formInitialValue;\n  }\n\n  // Initialize state\n  const [value, setVal, getTheVal] = useStateWithGetter(\n    initializeValue(initVal, mask, formatter, parser, initialize)\n  );\n\n  const [error, setErr, getErr] = useStateWithGetter(\n    validateOnMount ? validate(value) : undefined\n  );\n  const [touched, setTouch, getTouch] = useStateWithGetter(initTouched);\n\n  const [maskedValue, setMaskedValue] = useState(() =>\n    initializeMask(value, format, parse, formatter, parser)\n  );\n\n  const maskedValueRef = useRef();\n  maskedValueRef.current = maskedValue;\n\n  // Create then update refs to props\n  const initialValueRef = useRef(initialValue);\n  const fieldRef = useRef(field);\n  const prevFieldRef = useRef();\n  initialValueRef.current = initialValue;\n  fieldRef.current = field;\n\n  // Create ref to input\n  const internalRef = useRef(null);\n\n  const ref = React.useMemo(() => userRef || internalRef, []);\n\n  // Setup cursor position tracking\n  const { getCursor, setCursor, setCursorOffset } = useCursorPosition({\n    value: value,\n    inputRef: ref,\n    maintainCursor: !!maintainCursor\n  });\n\n  // Default relevant function\n  const relevantFunc = () => true;\n\n  const relevant = params => {\n    const rel = userRelevant || relevantFunc;\n    const ff = formApi.getFullField(fieldRef.current) || fieldRef.current;\n    const args = {\n      path: ff,\n      parentPath: ff.replace(/(.*)[.[].*/, '$1'),\n      get: (values, path) => ObjectMap.get(values, path)\n    };\n    if (multistepContext && multistepContext.relevant) {\n      return rel(params, args) && multistepContext.relevant(params, args);\n    }\n    return rel(params, args);\n  };\n\n  const [isRelevant, setIsRelevant, getIsRelevant] = useStateWithGetter(\n    relevant(formApi.getValues())\n  );\n\n  const multistepRelevant = params => {\n    if (multistepContext && multistepContext.relevant) {\n      return multistepContext.relevant(params);\n    }\n    return true;\n  };\n\n  const checkRelevant = () => {\n    const newRel = relevant(formApi.getValues());\n    const curRel = getIsRelevant();\n\n    if (newRel != curRel) {\n      setIsRelevant(newRel);\n    }\n    return newRel;\n  };\n\n  useEffect(\n    () => {\n      // Reset if we dont have keep state and relevance changed.\n      if (!isRelevant && !keepState) {\n        fieldApiRef.current.reset();\n      }\n    },\n    [isRelevant]\n  );\n\n  // Special getter to support shadow fields\n  const getVal = () => {\n    return shadow ? formApi.getDerrivedValue(field) : getTheVal();\n  };\n\n  /* ---------------------- Setters ---------------------- */\n\n  // ---- Define set error ----\n\n  const setError = (val, { preventUpdate } = {}) => {\n    // For multistep forms always set error to undefined when not at that step\n    if (step && formApi.getStep() < step) {\n      logger(\n        `Setting ${field}'s error to undefined as we are not at that step`\n      );\n      setErr(undefined);\n      updater.setError(fieldId, undefined, !preventUpdate);\n    } else {\n      logger(`Setting ${field}'s error to ${val}`);\n      setErr(val);\n      updater.setError(fieldId, val, !preventUpdate);\n    }\n  };\n\n  // ---- Define set value ----\n  const setValue = (v, e, options = {}) => {\n    let val = v;\n\n    // This value has now been modified\n    valueTouched.current = true;\n\n    logger(`Setting ${field} to ${val}`);\n\n    // Set value may have been called externally\n    // NOT from an inputs change event ( onChange )\n    // Therefore, as a precausion, we call the initialize function to format it just in case\n    if (initialize) {\n      val = initialize(val);\n    }\n\n    // Get the most up to date options\n    const formOptions = formApi.getOptions();\n\n    // Initialize maked value\n    let maskedVal = val;\n\n    if (\n      val === '' &&\n      !allowEmptyString &&\n      !options.allowEmptyString &&\n      !formOptions.allowEmptyStrings\n    ) {\n      val = undefined;\n    }\n\n    // Turn string into number for number fields\n    if (\n      (fieldProps.type === 'number' || fieldType === 'number') &&\n      val !== undefined\n    ) {\n      val = +val;\n    }\n\n    // Remember Cursor position!\n    if (e && e.target && e.target.selectionStart) {\n      setCursor(e.target.selectionStart);\n    }\n\n    // Call mask if it was passed\n    if (mask && !maskOnBlur) {\n      maskedVal = mask(val, getCursor());\n      val = mask(val, getCursor());\n    }\n\n    // Call maskWithCursorOffset if it was passed\n    if (maskWithCursorOffset && !maskOnBlur) {\n      const res = maskWithCursorOffset(val, getCursor());\n      maskedVal = res.value;\n      val = res.value;\n      setCursorOffset(res.offset);\n    }\n\n    // Call format and parse if they were passed\n    if (format && parse) {\n      // Masked value only differs from value when format and parse are used\n      val = parse(val);\n      maskedVal = format(val);\n    }\n\n    // Call formatter and parser if passed\n    if (formatter) {\n      const res = informedFormat(val, formatter);\n      setCursorOffset(res.offset);\n      maskedVal = res.value;\n      val = maskedVal;\n    }\n\n    // // Only parse if parser was passed\n    if (parser) {\n      val = val != null ? parser(val) : val;\n    }\n\n    // We only need to call validate if the user gave us one\n    // and they want us to validate on change && its not the initial validation\n    if (validate && validateOnChange && !options.initial) {\n      logger(`Validating after change ${field} ${val}`);\n      setError(validate(val, formApi.getValues()));\n    }\n\n    // Now we update the value\n    setVal(val);\n    setMaskedValue(maskedVal);\n\n    // If the user passed in onValueChange then call it!\n    if (onValueChange) {\n      onValueChange(val);\n    }\n\n    // Call the updater\n    updater.setValue(fieldId, val, !options.preventUpdate);\n  };\n\n  useUpdateEffect(\n    () => {\n      fieldApiRef.current.setValue(maskedValueRef.current);\n    },\n    [...formatterDependencies]\n  );\n\n  // ---- Define set touched ----\n  const setTouched = (val, reset, { preventUpdate } = {}) => {\n    logger(`Field ${field} has been touched`);\n\n    // We only need to call validate if the user gave us one\n    // and they want us to validate on blur\n    if (validate && validateOnBlur && !reset && val) {\n      logger(`Validating after blur ${field} ${getVal()}`);\n      setError(validate(getVal(), formApi.getValues()));\n    }\n\n    // Same for async\n    if (asyncValidate && asyncValidateOnBlur && !reset && val) {\n      logger(`Validating async after blur ${field} ${getVal()}`);\n      asyncValidate(getVal(), formApi.getValues());\n    }\n\n    // Call mask if it was passed\n    if (mask && maskOnBlur) {\n      // Generate the masked value from the current value\n      const maskedVal = mask(getVal());\n\n      // Now we update the value\n      setVal(maskedVal);\n      setMaskedValue(maskedVal);\n\n      // If the user passed in onValueChange then call it!\n      if (onValueChange) {\n        onValueChange(maskedVal);\n      }\n\n      // Call the updater\n      updater.setValue(fieldId, maskedVal, !preventUpdate);\n    }\n\n    // Call maskWithCursorOffset if it was passed\n    if (maskWithCursorOffset && maskOnBlur) {\n      // Generate the mask and offset\n      const res = maskWithCursorOffset(getVal());\n\n      // Set the offset\n      setCursorOffset(res.offset);\n\n      // Now we update the value\n      setVal(res.value);\n      setMaskedValue(res.value);\n\n      // If the user passed in onValueChange then call it!\n      if (onValueChange) {\n        onValueChange(res.value);\n      }\n\n      // Call the updater\n      updater.setValue(fieldId, res.value, !preventUpdate);\n    }\n\n    // Finally we set touched and call the updater\n    setTouch(val);\n    updater.setTouched(fieldId, val, !preventUpdate);\n  };\n\n  // ---- Define reset ----\n  const reset = ({ preventUpdate } = {}) => {\n    const initVal = initializeValue(\n      initialValueRef.current || updater.getInitialValue(fieldRef.current),\n      mask,\n      formatter,\n      parser,\n      initialize\n    );\n    // TODO support numbers\n    setValue(initVal, null, { initial: true, preventUpdate });\n    // Setting somthing to undefined will remove it\n    setError(validateOnMount ? validate(initVal) : undefined, {\n      preventUpdate\n    });\n    setTouched(undefined, true, { preventUpdate });\n\n    // We are now at our initial state\n    valueTouched.current = false;\n  };\n\n  // ---- Define validate ----\n\n  // Note: it takes values as an optimization for when\n  // the form controller calls it ( dont need to generate all values )\n  // over and over :)\n  const fieldValidate = values => {\n    if (validate) {\n      logger(`Field validating ${field} ${getVal()}`);\n      setError(validate(getVal(), values || formApi.getValues()));\n    }\n  };\n\n  const fieldAsyncValidate = values => {\n    if (asyncValidate) {\n      logger(`Field async validating ${field} ${getVal()}`);\n      asyncValidate(getVal(), values || formApi.getValues());\n    }\n  };\n\n  /* ----------------- Field Api && State ----------------- */\n\n  // Build the field api\n  const fieldApi = {\n    setValue,\n    setTouched,\n    setError,\n    reset,\n    validate: fieldValidate,\n    asyncValidate: fieldAsyncValidate,\n    getValue: getVal,\n    getTouched: getTouch,\n    getError: getErr,\n    getIsRelevant: getIsRelevant,\n    getDirty,\n    getPristine,\n    getFieldState: () => ({\n      value: getVal(),\n      touched: getTouch(),\n      dirty: getDirty(),\n      pristine: getPristine()\n    }),\n    relevant,\n    multistepRelevant,\n    checkRelevant\n  };\n  fieldApiRef.current = fieldApi;\n\n  // Build the field state\n  let fieldState = {\n    value,\n    error,\n    touched,\n    maskedValue,\n    isRelevant,\n    dirty: valueTouched.current,\n    pristine: !valueTouched.current\n  };\n\n  // Create shadow state if this is a shadow field\n  if (shadow) {\n    fieldState = {\n      error,\n      touched\n    };\n  }\n\n  logger('Render', formApi.getFullField(field), fieldState);\n\n  // We want to register and deregister this field\n  useLayoutEffect(() => {\n    const fullField = formApi.getFullField(fieldRef.current);\n    logger('Register', fieldId, fieldRef.current);\n    fieldObjectRef.current = {\n      field: fullField,\n      fieldId,\n      fieldApi,\n      fieldState,\n      notify,\n      keepState,\n      inMultistep,\n      shadow\n    };\n    updater.register(fieldId, fieldObjectRef.current);\n    return () => {\n      const fullField = formApi.getFullField(fieldRef.current);\n      logger('Deregister', fieldId, fullField);\n      updater.deregister(fieldId);\n    };\n  }, []);\n\n  // We want to let the controller know of changes on this field when specific props change\n  useEffect(\n    () => {\n      const fullField = formApi.getFullField(field);\n      if (initialRenerRef.current) {\n        initialRenerRef.current = false;\n      } else {\n        logger('Update', field, inMultistep);\n        fieldObjectRef.current.field = fullField;\n        updater.update(fieldId, fieldObjectRef.current, prevFieldRef.current);\n      }\n      return () => {\n        prevFieldRef.current = fullField;\n      };\n    },\n    [field]\n  );\n\n  // Maintain cursor position\n  // useLayoutEffect(\n  //   () => {\n  //     if (maintainCursor && ref.current != null && getCursor())\n  //       ref.current.selectionEnd = getCursor() + getCursorOffset();\n  //   },\n  //   [value]\n  // );\n\n  // for debugging\n  useLayoutEffect(() => {\n    if (debug && ref) {\n      ref.current.style.border = '5px solid orange';\n      setTimeout(() => {\n        ref.current.style.borderWidth = '2px';\n        ref.current.style.borderStyle = 'inset';\n        ref.current.style.borderColor = 'initial';\n        ref.current.style.borderImage = 'initial';\n      }, 500);\n    }\n  });\n\n  // This is an awesome optimization!!\n  const shouldUpdate = [\n    ...Object.values(fieldState),\n    ...Object.values(fieldProps),\n    ...Object.values(userProps)\n  ];\n\n  const render = children =>\n    useMemo(() => (isRelevant ? children : null), [...shouldUpdate]);\n\n  // const render = children => {\n  //   // console.log('RENDER', field);\n  //   return isRelevant ? children : null;\n  // };\n\n  // Build some setub fields so users can easily intagrate without any hookup code\n\n  const name = field;\n  const changeHandler = generateOnChange({\n    fieldType,\n    setValue,\n    onChange,\n    multiple,\n    ref\n  });\n  const blurHandler = generateOnBlur({ setTouched, onBlur });\n  const hookedValue = generateValue({\n    fieldType,\n    maskedValue,\n    multiple,\n    value\n  });\n\n  const type = generateFieldType(fieldType);\n\n  return {\n    fieldState,\n    fieldApi,\n    render,\n    ref,\n    userProps: {\n      ...userProps,\n      multiple, // WE NEED TO PUT THESE BACK!!\n      onChange, // WE NEED TO PUT THESE BACK!!\n      onBlur, // WE NEED TO PUT THESE BACK!!\n      // required // WE NEED TO PUT THESE BACK!!\n      id: userProps.id || fieldId // If user did not pass id we pass fields id\n    },\n    informed: {\n      name,\n      multiple,\n      onChange: changeHandler,\n      onBlur: blurHandler,\n      value: hookedValue,\n      ref,\n      type,\n      id: userProps.id || fieldId, // If user did not pass id we pass fields id\n      ...userProps\n    }\n  };\n}\n\nexport default useField;\n","import React from 'react';\nimport useField from '../hooks/useField';\nimport { getChildDisplayName } from '../utils';\n\nconst asField = Component => {\n  const forwardRef = React.forwardRef((props, userRef) => {\n    const { fieldState, fieldApi, render, ref, userProps } = useField(\n      props,\n      userRef\n    );\n\n    return render(\n      <Component\n        fieldApi={fieldApi}\n        fieldState={fieldState}\n        field={props.field}\n        forwardedRef={ref}\n        debug={props.debug}\n        type={props.type}\n        {...userProps}\n      />\n    );\n  });\n\n  forwardRef.displayName = `asField(${getChildDisplayName(Component)})`;\n\n  return forwardRef;\n};\n\nexport default asField;\n","import React from 'react';\nimport asField from '../../HOC/asField';\nimport Debug from '../../debug';\nimport useLayoutEffect from '../../hooks/useIsomorphicLayoutEffect';\nconst logger = Debug('informed:Text' + '\\t');\n\nconst Text = ({ fieldApi, fieldState, ...props }) => {\n  const { maskedValue } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    debug,\n    label,\n    title,\n    id,\n    ...rest\n  } = props;\n\n  logger('Render', field);\n\n  // for debugging\n  useLayoutEffect(() => {\n    if (debug && forwardedRef) {\n      forwardedRef.current.style.background = 'red';\n      setTimeout(() => {\n        forwardedRef.current.style.background = 'white';\n      }, 500);\n    }\n  });\n\n  return (\n    <>\n      {label ? <label htmlFor={id}> {label} </label> : null}\n      <input\n        {...rest}\n        id={id}\n        name={field}\n        ref={forwardedRef}\n        value={!maskedValue && maskedValue !== 0 ? '' : maskedValue}\n        onChange={e => {\n          setValue(e.target.value, e);\n          if (onChange) {\n            onChange(e);\n          }\n        }}\n        onBlur={e => {\n          setTouched(true);\n          if (onBlur) {\n            onBlur(e);\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport { Text as BasicText };\n\nexport default asField(Text);\n","import React from 'react';\nimport asField from '../../HOC/asField';\nimport useLayoutEffect from '../../hooks/useIsomorphicLayoutEffect';\n\nconst TextArea = ({ fieldApi, fieldState, ...props }) => {\n  const { maskedValue } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    debug,\n    label,\n    id,\n    ...rest\n  } = props;\n\n  // for debugging\n  useLayoutEffect(() => {\n    if (debug && forwardedRef) {\n      forwardedRef.current.style.background = 'red';\n      setTimeout(() => {\n        forwardedRef.current.style.background = 'white';\n      }, 500);\n    }\n  });\n\n  return (\n    <>\n      {label ? <label htmlFor={id}> {label} </label> : null}\n      <textarea\n        {...rest}\n        id={id}\n        name={field}\n        ref={forwardedRef}\n        value={!maskedValue ? '' : maskedValue}\n        onChange={e => {\n          setValue(e.target.value, e);\n          if (onChange) {\n            onChange(e);\n          }\n        }}\n        onBlur={e => {\n          setTouched(true);\n          if (onBlur) {\n            onBlur(e);\n          }\n        }}\n      />\n    </>\n  );\n};\n\nexport { TextArea as BasicTextArea };\n\nexport default asField(TextArea);\n","import React, { useRef } from 'react';\nimport asField from '../../HOC/asField';\nimport Debug from '../../debug';\nimport useLayoutEffect from '../../hooks/useIsomorphicLayoutEffect';\n\nconst logger = Debug('informed:Select' + '\\t');\n\nconst Select = ({ fieldApi, fieldState, ...props }) => {\n  const { value } = fieldState;\n  const { setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    options,\n    children,\n    forwardedRef,\n    debug,\n    multiple,\n    label,\n    id,\n    ...rest\n  } = props;\n\n  const selectRef = useRef();\n\n  const handleChange = e => {\n    let selected = Array.from((forwardedRef || selectRef).current)\n      .filter(option => option.selected)\n      .map(option => option.value);\n\n    fieldApi.setValue(multiple ? selected : selected[0] || '');\n\n    if (onChange && e) {\n      onChange(e);\n    }\n  };\n\n  // for debugging\n  useLayoutEffect(() => {\n    if (debug && forwardedRef) {\n      forwardedRef.current.style.background = 'red';\n      setTimeout(() => {\n        forwardedRef.current.style.background = 'white';\n      }, 500);\n    }\n  });\n\n  logger('Render', field, value);\n\n  return (\n    <>\n      {label ? <label htmlFor={id}> {label} </label> : null}\n      <select\n        {...rest}\n        id={id}\n        multiple={multiple}\n        name={field}\n        ref={forwardedRef || selectRef}\n        value={value || (multiple ? [] : '')}\n        onChange={handleChange}\n        onBlur={e => {\n          setTouched(true);\n          if (onBlur) {\n            onBlur(e);\n          }\n        }}>\n        {options\n          ? options.map(option => (\n              <option\n                key={option.value}\n                value={option.value}\n                disabled={option.disabled}>\n                {option.label}\n              </option>\n            ))\n          : children}\n      </select>\n    </>\n  );\n};\n\nexport { Select as BasicSelect };\n\nexport default asField(Select);\n","import React from 'react';\nimport asField from '../../HOC/asField';\n\nconst Checkbox = ({ fieldApi, fieldState, ...props }) => {\n  const { value } = fieldState;\n  const { setValue, setTouched } = fieldApi;\n  const {\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    debug,\n    forwardedRef,\n    id,\n    label,\n    ...rest\n  } = props;\n  return (\n    <>\n      {label ? <label htmlFor={id}> {label} </label> : null}\n\n      <input\n        {...rest}\n        id={id}\n        name={field}\n        ref={forwardedRef}\n        checked={!!value}\n        onChange={e => {\n          setValue(e.target.checked);\n          if (onChange) {\n            onChange(e);\n          }\n        }}\n        onBlur={e => {\n          setTouched(true);\n          if (onBlur) {\n            onBlur(e);\n          }\n        }}\n        type=\"checkbox\"\n      />\n    </>\n  );\n};\n\nexport { Checkbox as BasicCheckbox };\n\nexport default asField(Checkbox);\n","import React from 'react';\nimport { GroupContext } from '../Context';\n\nconst withRadioGroup = Component =>\n  React.forwardRef((props, ref) => (\n    <GroupContext.Consumer>\n      {({ radioGroupApi, radioGroupState }) => (\n        <Component\n          radioGroupApi={radioGroupApi}\n          radioGroupState={radioGroupState}\n          ref={ref}\n          {...props}\n        />\n      )}\n    </GroupContext.Consumer>\n  ));\n\nexport default withRadioGroup;\n","import React from 'react';\nimport withRadioGroup from '../../HOC/withRadioGroup';\n\nconst Radio = ({ radioGroupApi, radioGroupState, ...props }) => {\n  const { value: groupValue } = radioGroupState;\n  const {\n    setValue,\n    setTouched,\n    onChange: groupOnChange,\n    onBlur: groupOnBlur\n  } = radioGroupApi;\n  const {\n    value,\n    onChange,\n    onBlur,\n    field,\n    initialValue,\n    forwardedRef,\n    ...rest\n  } = props;\n  return (\n    <input\n      {...rest}\n      name={field}\n      ref={forwardedRef}\n      value={value}\n      checked={groupValue === value}\n      onChange={e => {\n        if (!e.target.checked) {\n          return;\n        }\n        setValue(value);\n        if (onChange) {\n          onChange(e);\n        }\n        if (groupOnChange) {\n          groupOnChange(e);\n        }\n      }}\n      onBlur={e => {\n        setTouched(true);\n        if (onBlur) {\n          onBlur(e);\n        }\n        if (groupOnBlur) {\n          groupOnBlur(e);\n        }\n      }}\n      type=\"radio\"\n    />\n  );\n};\n\nexport { Radio as BasicRadio };\n\nexport default withRadioGroup(Radio);\n","import React, { Component } from 'react';\nimport { GroupContext } from '../../Context';\nimport Radio from './Radio';\n\nimport asField from '../../HOC/asField';\n\nclass RadioGroup extends Component {\n  get groupContext() {\n    return {\n      radioGroupApi: {\n        ...this.props.fieldApi,\n        onChange: this.props.onChange,\n        onBlur: this.props.onBlur\n      },\n      radioGroupState: this.props.fieldState\n    };\n  }\n\n  render() {\n    const { options, children } = this.props;\n\n    return (\n      <GroupContext.Provider value={this.groupContext}>\n        {options\n          ? options.map(option => (\n              <label key={option.value}>\n                {option.label} <Radio value={option.value} />\n              </label>\n            ))\n          : children}\n      </GroupContext.Provider>\n    );\n  }\n}\n\nexport { RadioGroup as BasicRadioGroup };\n\nexport default asField(RadioGroup);\n","import React, { useContext } from 'react';\nimport { ArrayFieldApiContext } from '../Context';\n\nfunction useArrayFieldApi() {\n  return useContext(ArrayFieldApiContext);\n}\n\nexport default useArrayFieldApi;\n","import React from 'react';\nimport useArrayFieldApi from '../../hooks/useArrayFieldApi';\n\nconst AddButton = () => {\n  const { add } = useArrayFieldApi();\n\n  return (\n    <button\n      onClick={() => {\n        add();\n      }}\n      type=\"button\">\n      Add\n    </button>\n  );\n};\n\nexport default AddButton;\n","import React, { useContext } from 'react';\nimport { ArrayFieldItemApiContext } from '../Context';\n\nfunction useArrayFieldItemApi() {\n  return useContext(ArrayFieldItemApiContext);\n}\n\nexport default useArrayFieldItemApi;\n","import React from 'react';\nimport useArrayFieldItemApi from '../../hooks/useArrayFieldItemApi';\n\nconst AddButton = () => {\n  const { remove } = useArrayFieldItemApi();\n\n  return (\n    <button\n      onClick={() => {\n        remove();\n      }}\n      type=\"button\">\n      Remove\n    </button>\n  );\n};\n\nexport default AddButton;\n","import React, { useState, useMemo, useContext } from 'react';\nimport useFormApi from './useFormApi';\nimport useField from './useField';\nimport useStateWithGetter from './useStateWithGetter';\nimport Debug from '../debug';\nimport useLayoutEffect from './useIsomorphicLayoutEffect';\nimport {\n  FormRegisterContext,\n  ArrayFieldApiContext,\n  ArrayFieldStateContext\n} from '../Context';\n\nimport { uuidv4 } from '../utils';\nimport ObjectMap from '../ObjectMap';\n\nconst logger = Debug('informed:useArrayField' + '\\t');\n\nconst useArrayField = ({\n  field,\n  initialValue,\n  validate,\n  arrayFieldApiRef,\n  ...props\n}) => {\n  // Reference to the form Api\n  const formApi = useFormApi();\n\n  // Keep track of fields that belong to this array field\n  const [fieldsById] = useState(new Map());\n\n  // Grab the form register context\n  const updater = useContext(FormRegisterContext);\n\n  // May be scoped so get full field name!!\n  const fullField = formApi.getFullField(field);\n\n  const initialVals = updater.getInitialValue(field) || initialValue || [];\n\n  // TODO throw error if initial value and its not array\n\n  // If keep state was passed into the child inputs we need to maintain the length of\n  // keys, in order to do so we grab the value from informeds api\n\n  const keptValues =\n    formApi.getSavedValue(fullField) && formApi.getSavedValue(fullField).value;\n\n  const [\n    initialValues,\n    setInitialValues,\n    getInitialValues\n  ] = useStateWithGetter(keptValues || initialVals);\n\n  const initialKeys = initialValues ? initialValues.map(() => uuidv4()) : [];\n\n  const [keys, setKeys, getKeys] = useStateWithGetter(initialKeys);\n\n  const validateWithLength = useMemo(() => (value, values) => {\n    const length = getKeys() == null ? 0 : getKeys().length;\n    return validate ? validate(value, length, values) : undefined;\n  });\n\n  // Register shadow field\n  const { fieldApi } = useField({\n    field,\n    validate: validate ? validateWithLength : undefined,\n    shadow: true,\n    ...props\n  });\n\n  // Register for events\n  useLayoutEffect(\n    () => {\n      // Define event handler\n      const onChangeHandler = fieldName => {\n        // Dont do anythign if we updated\n        if (fieldName === fullField) {\n          return;\n        }\n\n        logger(`${fullField} changed`);\n\n        // determine if one of our array children triggered this change\n        if (RegExp(`${fullField}\\\\[[0-9]+\\\\]`).test(fieldName)) {\n          // If it was we need to call validate\n          fieldApi.validate();\n        }\n      };\n\n      // Register for events\n      formApi.emitter.on('value', onChangeHandler);\n\n      // Unregister events\n      return () => {\n        formApi.emitter.removeListener('value', onChangeHandler);\n      };\n    },\n    [field]\n  );\n\n  const remove = i => {\n    // Notify form to expect removal on this field\n    logger(\n      'EXPECTING REMOVAL OF',\n      `${field}[${i}] and ${field}[${keys.length - 1}]`\n    );\n    updater.expectRemoval(`${field}[${i}]`);\n    updater.expectRemoval(`${field}[${keys.length - 1}]`);\n\n    // Remove the key\n    const newKeys = keys.slice(0, i).concat(keys.slice(i + 1, keys.length));\n    setKeys(newKeys);\n    // Remove the initial value ( user wanted to get rid of that input )\n    const initVals = getInitialValues();\n    const newInitialValues = initVals\n      .slice(0, i)\n      .concat(initVals.slice(i + 1, initVals.length));\n    setInitialValues(newInitialValues);\n    //formApi.setInitialValue(field, newInitialValues);\n  };\n\n  const swap = (a, b) => {\n    logger('Swapping', `${field}[${a}] and ${field}[${b}]`);\n\n    // Swap the keys\n    const newKeys = [...keys];\n\n    if (keys[a] && keys[b]) {\n      newKeys[a] = keys[b];\n      newKeys[b] = keys[a];\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Attempted to swap ${a} with ${b} but one of them does not exist :(`\n      );\n    }\n\n    setKeys(newKeys);\n  };\n\n  const add = () => {\n    keys.push(uuidv4());\n    setKeys([...keys]);\n  };\n\n  const addWithInitialValue = initialValue => {\n    keys.push(uuidv4());\n    setKeys([...keys]);\n    const newInitialValues = [...getInitialValues()];\n    newInitialValues[keys.length - 1] = initialValue;\n    setInitialValues(newInitialValues);\n  };\n\n  const reset = () => {\n    // When resetting we reset to the users initial value not the one tracked by this hook\n    const initVals = updater.getInitialValue(field) || initialValue || [];\n    // Set our initial values back to what the user set at beginning\n    setInitialValues(initVals);\n    // Build a new set of keys because everything is new !!!\n    const resetKeys = initVals ? initVals.map(() => uuidv4()) : [];\n    // Finally set that shit !\n    setKeys(resetKeys);\n  };\n\n  const fields = keys.map((key, i) => {\n    const arrayFieldItemApi = {\n      remove: () => remove(i)\n    };\n\n    const arrayFieldItemState = {\n      initialValue: initialValues && initialValues[i],\n      key,\n      field: `${field}[${i}]`,\n      index: i\n    };\n\n    return {\n      arrayFieldItemApi,\n      arrayFieldItemState,\n      // Makes it easier for users\n      ...arrayFieldItemApi,\n      ...arrayFieldItemState\n    };\n  });\n\n  const arrayFieldApi = {\n    add,\n    swap,\n    addWithInitialValue,\n    reset\n  };\n\n  if (arrayFieldApiRef) {\n    arrayFieldApiRef.current = arrayFieldApi;\n  }\n\n  const arrayFieldState = {\n    fields,\n    field\n  };\n\n  // Wrap the updater to update array fields references\n  const wrappedUpdator = {\n    ...updater,\n    register: (id, fld, ...args) => {\n      fieldsById.set(id, fld);\n      updater.register(id, fld, ...args);\n    },\n    deregister: (id, ...args) => {\n      fieldsById.delete(id);\n      updater.deregister(id, ...args);\n    },\n    getInitialValue: fieldName => {\n      // If we are getting initial value and its for this field return that\n      if (RegExp(`${fullField}\\\\[[0-9]+\\\\]`).test(fieldName)) {\n        const path = fieldName.replace(field, '');\n        const v = ObjectMap.get(getInitialValues(), path);\n        logger(`Resetting ${path} to ${v}`);\n        return v;\n      }\n      return updater.getInitialValue(fieldName);\n    }\n  };\n\n  const render = children => (\n    <FormRegisterContext.Provider value={wrappedUpdator}>\n      <ArrayFieldApiContext.Provider value={arrayFieldApi}>\n        <ArrayFieldStateContext.Provider value={arrayFieldState}>\n          {children}\n        </ArrayFieldStateContext.Provider>\n      </ArrayFieldApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n\n  return {\n    render,\n    add,\n    swap,\n    addWithInitialValue,\n    fields,\n    arrayFieldState,\n    arrayFieldApi,\n    field\n  };\n};\n\nexport default useArrayField;\n","// eslint-disable-next-line no-unused-vars\nimport React, { useMemo } from 'react';\nimport useFormApi from './useFormApi';\n\nconst buildScopedFormApi = (scope, formApi) => {\n  return {\n    ...formApi,\n    getValue: field => formApi.getValue(`${scope}.${field}`),\n    getTouched: field => formApi.getTouched(`${scope}.${field}`),\n    getError: field => formApi.getError(`${scope}.${field}`),\n    setValue: (field, value) => formApi.setValue(`${scope}.${field}`, value),\n    setTouched: (field, value) =>\n      formApi.setTouched(`${scope}.${field}`, value),\n    setError: (field, value) => formApi.setError(`${scope}.${field}`, value),\n    getInitialValue: field => formApi.getInitialValue(`${scope}.${field}`),\n    getSavedValue: field => formApi.getSavedValue(`${scope}.${field}`),\n    getFullField: field => `${formApi.getFullField(scope)}.${field}`\n  };\n};\n\nfunction useScopedApi(scope) {\n  const formApi = useFormApi();\n\n  // VERY important to memoize the builder!\n  const scopedFormApi = useMemo(() => buildScopedFormApi(scope, formApi), [\n    scope\n  ]);\n\n  return scopedFormApi;\n}\n\nexport default useScopedApi;\n","import React, { useContext } from 'react';\nimport { FormStateContext } from '../Context';\n\nfunction useFormState() {\n  const formState = useContext(FormStateContext);\n  return formState;\n}\n\nexport default useFormState;\n","import React from 'react';\nimport useFormState from '../hooks/useFormState';\n\nconst Relevant = ({ when, children }) => {\n  const formState = useFormState();\n\n  const isRelevant = when(formState);\n\n  if (isRelevant) {\n    return children;\n  }\n\n  return null;\n};\n\nexport default Relevant;\n","import React, { useContext, useState, useEffect } from 'react';\nimport ObjectMap from '../ObjectMap';\nimport useArrayField from '../hooks/useArrayField';\nimport useFormApi from '../hooks/useFormApi';\nimport useScopedApi from '../hooks/useScopedApi';\nimport Relevant from './Relevant';\nimport {\n  ArrayFieldStateContext,\n  ArrayFieldItemApiContext,\n  ArrayFieldItemStateContext,\n  FormRegisterContext\n} from '../Context';\n\nconst ArrayField = ({ relevant, field, ...props }) => {\n  // Need to get formApi to have consistant interface for relevant function\n  const formApi = useFormApi();\n\n  if (relevant) {\n    const ff = formApi.getFullField(field);\n    const args = {\n      path: ff,\n      parentPath: ff.replace(/(.*)[.[].*/, '$1'),\n      get: (values, path) => ObjectMap.get(values, path)\n    };\n\n    const when = ({ values }) => {\n      return relevant(values, args);\n    };\n\n    return (\n      <Relevant when={when}>\n        <ArrayFieldWrapper field={field} {...props} />\n      </Relevant>\n    );\n  } else {\n    return <ArrayFieldWrapper field={field} {...props} />;\n  }\n};\n\nconst ArrayFieldWrapper = ({ children, ...props }) => {\n  const { render, arrayFieldState, arrayFieldApi, field } = useArrayField(\n    props\n  );\n\n  if (typeof children === 'function') {\n    return render(\n      children({\n        field,\n        arrayFieldApi,\n        arrayFieldState,\n        // Make it easier for user\n        ...arrayFieldApi,\n        ...arrayFieldState\n      })\n    );\n  }\n\n  return render(children);\n};\n\nconst ArrayFieldItem = ({\n  arrayFieldItemState,\n  arrayFieldItemApi,\n  children\n}) => {\n  // Grab the form register context\n  const updater = useContext(FormRegisterContext);\n\n  // Grab the form state\n  const formApi = useFormApi();\n\n  // A little trick I learned in nam to trigger rerender\n  const [state, setState] = useState(0);\n\n  // Keep track of fields that belong to this array field\n  const [fieldsById] = useState(new Map());\n\n  // Get this items field\n  const { field } = arrayFieldItemState;\n\n  // Create scoped api\n  const scopedApi = useScopedApi(field);\n\n  // State generation function\n  const getState = () => {\n    const { values, errors, touched } = formApi.getState();\n    // Get this fields state\n    const itemState = {\n      values: ObjectMap.get(values, field),\n      errors: ObjectMap.get(errors, field),\n      touched: ObjectMap.get(touched, field)\n    };\n    return itemState;\n  };\n\n  // Register for events for rerenders!\n  useEffect(\n    () => {\n      // Define event handler\n      const onChangeHandler = fieldName => {\n        // Example foo.bar.baz[3].baz >>>> foo.bar.baz[3]\n        const magicValue = fieldName.slice(\n          0,\n          fieldName.lastIndexOf('[') != -1\n            ? fieldName.lastIndexOf(']') + 1\n            : fieldName.length\n        );\n\n        // This field updated so trigger rerender\n        if (magicValue === field) {\n          setState(Math.random());\n        }\n      };\n\n      // Register for events\n      formApi.emitter.on('value', onChangeHandler);\n\n      // Unregister events\n      return () => {\n        formApi.emitter.removeListener('value', onChangeHandler);\n      };\n    },\n    [field]\n  );\n\n  // Resets all fields in this item\n  const reset = () => {\n    fieldsById.forEach(fld => {\n      fld.fieldApi.reset();\n    });\n  };\n\n  // Generate the item state\n  const itemState = getState();\n\n  // Wrap the updater to update array fields references\n  const wrappedUpdator = {\n    ...updater,\n    register: (id, fld, initialRender) => {\n      fieldsById.set(id, fld);\n      updater.register(id, fld, initialRender);\n    },\n    deregister: (id, ...args) => {\n      fieldsById.delete(id);\n      updater.deregister(id, ...args);\n    }\n  };\n\n  const arrayFieldItemApiValue = {\n    ...arrayFieldItemApi,\n    ...scopedApi,\n    reset\n  };\n\n  const arrayFieldItemStateValue = {\n    ...arrayFieldItemState,\n    ...itemState\n  };\n\n  if (typeof children === 'function') {\n    return (\n      <FormRegisterContext.Provider value={wrappedUpdator}>\n        <ArrayFieldItemApiContext.Provider value={arrayFieldItemApiValue}>\n          <ArrayFieldItemStateContext.Provider value={arrayFieldItemStateValue}>\n            {children({\n              arrayFieldItemApi: arrayFieldItemApiValue,\n              arrayFieldItemState: arrayFieldItemStateValue,\n              // Make it easier for user\n              ...arrayFieldItemApiValue,\n              ...arrayFieldItemStateValue\n            })}\n          </ArrayFieldItemStateContext.Provider>\n        </ArrayFieldItemApiContext.Provider>\n      </FormRegisterContext.Provider>\n    );\n  }\n\n  return (\n    <FormRegisterContext.Provider value={wrappedUpdator}>\n      <ArrayFieldItemApiContext.Provider value={arrayFieldItemApiValue}>\n        <ArrayFieldItemStateContext.Provider value={arrayFieldItemStateValue}>\n          {children}\n        </ArrayFieldItemStateContext.Provider>\n      </ArrayFieldItemApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n};\n\nArrayField.Items = ({ children }) => {\n  const { fields } = useContext(ArrayFieldStateContext);\n  return fields.map(({ arrayFieldItemState, arrayFieldItemApi }) => {\n    const { key } = arrayFieldItemState;\n    return (\n      <ArrayFieldItem\n        key={key}\n        arrayFieldItemApi={arrayFieldItemApi}\n        arrayFieldItemState={arrayFieldItemState}>\n        {children}\n      </ArrayFieldItem>\n    );\n  });\n};\n\nexport default ArrayField;\n","import React, { useContext } from 'react';\nimport { FormRegisterContext } from '../Context';\n\nconst FormComponents = ({ components }) => {\n  // Get the field map off the forms context\n  const { fieldMap } = useContext(FormRegisterContext);\n\n  if (!components) return null;\n\n  return components.map((comp, i) => {\n    const { 'ui:control': componentType } = comp;\n    const Component = fieldMap[componentType];\n    return <Component key={`ui-comp-${i}`} />;\n  });\n};\n\nexport default FormComponents;\n","import React, { useMemo, useContext } from 'react';\nimport { computeFieldsFromSchema } from '../utils';\nimport ArrayField from './form-fields/ArrayField';\nimport Relevant from './Relevant';\nimport Debug from '../debug';\nimport { FormRegisterContext } from '../Context';\n\nconst logger = Debug('informed:FormFields' + '\\t');\n\nconst FormFields = ({ schema, prefix, onlyValidateSchema }) => {\n  // Get the field map off the forms context\n  const { fieldMap } = useContext(FormRegisterContext);\n\n  // Get fields from scheama\n\n  const fields = useMemo(\n    () => {\n      const schemaFields = computeFieldsFromSchema(\n        schema,\n        onlyValidateSchema,\n        prefix\n      );\n\n      const mapedFields = schemaFields.map((schemaField, i) => {\n        const {\n          field,\n          props,\n          type,\n          properties,\n          items,\n          componentType,\n          uiBefore,\n          uiAfter,\n          allOf\n        } = schemaField;\n\n        const Component = fieldMap[componentType];\n\n        // console.log('WTF', schemaField);\n        logger('Rendering Field', field, schemaField);\n\n        // Scope for nested\n        if (!Component && type === 'object' && properties) {\n          return (\n            <FormFields\n              schema={schemaField}\n              prefix={field}\n              key={`ScheamField-${i}`}\n            />\n          );\n        }\n\n        // Array field for array ( if none was provided use our default )\n        if (!Component && type === 'array' && items) {\n          return (\n            <ArrayField\n              key={`ScheamField-${i}`}\n              field={field}\n              items={items}\n              uiBefore={uiBefore}\n              uiAfter={uiAfter}\n              {...props}\n            />\n          );\n        }\n\n        // User created custom array field\n        if (\n          Component &&\n          componentType === 'array' &&\n          items &&\n          type === 'array'\n        ) {\n          return (\n            <Component\n              key={`ScheamField-${i}`}\n              field={field}\n              items={items}\n              uiBefore={uiBefore}\n              uiAfter={uiAfter}\n              {...props}\n            />\n          );\n        }\n\n        // For conditionals\n        if (componentType === 'conditionals') {\n          return allOf.map(conditional => {\n            // Example then ( its a subschema )\n            // then: {\n            //   properties: {\n            //     spouse: {\n            //       type: 'string',\n            //       title: 'Spouse name',\n            //       'ui:control': 'input'\n            //     }\n            //   }\n            // }\n            const subSchema = conditional.then;\n\n            // Turn the if into a when function for informed\n            // Example if condition\n            // if: {\n            //   properties: {\n            //     married: { const: 'yes' }\n            //   },\n            //   required: ['married']\n            // },\n            const { properties: conditions } = conditional.if;\n            const when = ({ values }) => {\n              // Example key \"married, Example condition: \"{ const: 'yes' }\"\n              return Object.keys(conditions).every(key => {\n                const condition = conditions[key];\n                // values.married === 'yes'\n                return values[key] === condition.const;\n              });\n            };\n\n            return (\n              <Relevant key={`ScheamField-${i}`} when={when}>\n                <FormFields schema={subSchema} />\n              </Relevant>\n            );\n          });\n        }\n\n        // If no com ret null ( dont render )\n        if (!Component) {\n          return null;\n        }\n\n        return <Component key={`ScheamField-${i}`} field={field} {...props} />;\n      });\n\n      return mapedFields;\n    },\n    [schema, prefix]\n  );\n\n  return fields;\n};\n\nexport default FormFields;\n","import React from 'react';\nimport InformedArrayField from '../ArrayField';\nimport FormComponents from '../FormComponents';\nimport FormFields from '../FormFields';\n\nconst ArrayField = ({ field, items, uiBefore, uiAfter, ...props }) => {\n  return (\n    <InformedArrayField field={field} {...props}>\n      <FormComponents components={uiBefore} />\n      <InformedArrayField.Items>\n        {({ field }) => (\n          <React.Fragment>\n            <FormComponents components={items['ui:before']} />\n            <FormFields schema={items} prefix={field} />\n            <FormComponents components={items['ui:after']} />\n          </React.Fragment>\n        )}\n      </InformedArrayField.Items>\n      <FormComponents components={uiAfter} />\n    </InformedArrayField>\n  );\n};\n\nexport default ArrayField;\n","import Text from './components/form-fields/Text';\nimport TextArea from './components/form-fields/TextArea';\nimport Select from './components/form-fields/Select';\nimport Checkbox from './components/form-fields/Checkbox';\nimport RadioGroup from './components/form-fields/RadioGroup';\nimport AddButton from './components/form-fields/AddButton';\nimport RemoveButton from './components/form-fields/RemoveButton';\nimport ArrayField from './components/form-fields/ArrayField';\n\nexport default {\n  select: Select,\n  input: Text,\n  textarea: TextArea,\n  checkbox: Checkbox,\n  radio: RadioGroup,\n  add: AddButton,\n  remove: RemoveButton,\n  array: ArrayField\n};\n","import ObjectMap from './ObjectMap';\nimport Debug from './debug';\nimport defaultFieldMap from './fieldMap';\nimport { validateYupSchema, validateAjvSchema } from './utils';\n\nconst debug = Debug('informed:Controller' + '\\t');\n\nconst isExpected = (path, expectedRemovals) => {\n  const includedKey = Object.keys(expectedRemovals).find(key =>\n    path.includes(key)\n  );\n  if (!includedKey) return;\n  const start = path.slice(0, includedKey.length);\n  return start === includedKey;\n};\n\nconst noop = () => {};\nclass FormController {\n  constructor(options = {}) {\n    this.options = options;\n\n    // Initialize listeners\n    this.subscriptions = new Map();\n\n    const { ajv, schema, fieldMap } = options;\n\n    // Create new ajv instance if passed\n    this.ajv = ajv ? new ajv({ allErrors: true }) : null;\n    this.ajvValidate = ajv ? this.ajv.compile(schema) : null;\n\n    // Add field map ( defaults to our field map )\n    this.fieldMap = fieldMap || defaultFieldMap;\n\n    // Map will store all fields by id\n    // Key => uuid\n    // Val => fieldObj\n    // Why? so the form can control the fields!\n    this.fieldsById = new Map();\n\n    // Map will store all fields by name\n    // Key => fieldName - example: \"foo.bar[3].baz\"\n    // Val => fieldObj\n    // Why? so the form can control the fields!\n    this.fieldsByName = {\n      get: name => {\n        let fieldByName;\n        // TODO speed this up maybe\n        this.fieldsById.forEach(value => {\n          if (value && value.field === name) {\n            fieldByName = value;\n          }\n        });\n        return fieldByName;\n      }\n    };\n\n    // Map to store whos on the screen\n    this.onScreen = {};\n\n    // Map to store fields being removed\n    this.expectedRemovals = {};\n    this.pulledOut = {};\n\n    // Map of saved values\n    this.savedValues = {};\n\n    // Initialize the controller state\n    this.state = {\n      pristine: true,\n      dirty: false,\n      invalid: false,\n      submits: 0,\n      step: 0,\n      validating: 0,\n      submitting: false,\n      values: {},\n      errors: {},\n      touched: {}\n    };\n\n    // Initialize a dummy field ( see getField for example use )\n    this.dummyField = {\n      fieldApi: {\n        setValue: noop,\n        setTouched: noop,\n        setError: noop,\n        reset: noop,\n        validate: noop,\n        getValue: noop,\n        getTouched: noop,\n        getError: noop,\n        getFieldState: noop,\n        checkRelevant: noop,\n        getPristine: noop,\n        getDirty: noop\n      }\n    };\n\n    // Bind functions that will be called externally\n    this.deregister = this.deregister.bind(this);\n    this.register = this.register.bind(this);\n    this.getValue = this.getValue.bind(this);\n    this.getTouched = this.getTouched.bind(this);\n    this.getError = this.getError.bind(this);\n    this.getErrors = this.getErrors.bind(this);\n    this.setValue = this.setValue.bind(this);\n    this.getValues = this.getValues.bind(this);\n    this.getStep = this.getStep.bind(this);\n    this.setStep = this.setStep.bind(this);\n    this.back = this.back.bind(this);\n    this.next = this.next.bind(this);\n    this.setCurrent = this.setCurrent.bind(this);\n    this.setTouched = this.setTouched.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setFormError = this.setFormError.bind(this);\n    this.submitForm = this.submitForm.bind(this);\n    this.reset = this.reset.bind(this);\n    this.update = this.update.bind(this);\n    this.validate = this.validate.bind(this);\n    this.screenValid = this.screenValid.bind(this);\n    this.keyDown = this.keyDown.bind(this);\n    this.getField = this.getField.bind(this);\n    this.getInitialValue = this.getInitialValue.bind(this);\n    this.setInitialValue = this.setInitialValue.bind(this);\n    this.getOptions = this.getOptions.bind(this);\n    this.getFormState = this.getFormState.bind(this);\n    this.expectRemoval = this.expectRemoval.bind(this);\n    this.getSavedValue = this.getSavedValue.bind(this);\n    this.removeSavedState = this.removeSavedState.bind(this);\n    this.getDerrivedValue = this.getDerrivedValue.bind(this);\n    this.setValues = this.setValues.bind(this);\n    this.resetField = this.resetField.bind(this);\n    this.fieldExists = this.fieldExists.bind(this);\n    this.validateField = this.validateField.bind(this);\n    this.notify = this.notify.bind(this);\n    this.validating = this.validating.bind(this);\n    this.validated = this.validated.bind(this);\n    this.getDirty = this.getDirty.bind(this);\n    this.getPristine = this.getPristine.bind(this);\n    this.on = this.on.bind(this);\n    this.emit = this.emit.bind(this);\n    this.removeListener = this.removeListener.bind(this);\n\n    // Updater will be used by fields to update and register\n    this.updater = {\n      register: this.register,\n      deregister: this.deregister,\n      getField: this.getField,\n      update: this.update,\n      fieldMap: this.fieldMap,\n      setValue: (fieldId, value, emit = true) => {\n        const field = this.fieldsById.get(fieldId);\n\n        if (!field.shadow) {\n          ObjectMap.set(\n            this.state.values,\n            field.field,\n            field.fieldApi.getValue()\n          );\n        }\n\n        if (!field.fieldApi.relevant(this.state.values)) {\n          ObjectMap.delete(this.state.values, field.field);\n        }\n\n        // Cleanup phase to get rid of irrelevant fields\n        // Also evaluate relevance on all fields\n        this.fieldsById.forEach(f => {\n          // If a fields within an irrelivant step then remove it\n          // Otherwise, check to see if its relevant and only remove if keep state is false\n          const newRel = f.fieldApi.checkRelevant();\n          if (\n            !f.fieldApi.multistepRelevant(this.state.values) ||\n            (!newRel && !f.keepState)\n          ) {\n            ObjectMap.delete(this.state.values, f.field);\n            ObjectMap.delete(this.state.touched, f.field);\n            ObjectMap.delete(this.state.errors, f.field);\n          }\n        });\n\n        if (emit) {\n          this.emit('change');\n          this.emit('field', field.field);\n          this.emit('value', field.field, value);\n        }\n      },\n      setTouched: (fieldId, touch, emit = true) => {\n        const field = this.fieldsById.get(fieldId);\n\n        if (!field.shadow && field.fieldApi.getIsRelevant()) {\n          ObjectMap.set(\n            this.state.touched,\n            field.field,\n            field.fieldApi.getTouched()\n          );\n        }\n\n        // Shadow values override unless undefined\n        if (\n          field.shadow &&\n          field.fieldApi.getError() != undefined &&\n          field.fieldApi.relevant(this.state.values)\n        ) {\n          ObjectMap.set(\n            this.state.touched,\n            field.field,\n            field.fieldApi.getTouched()\n          );\n        }\n        if (emit) {\n          this.emit('change');\n          this.emit('field', field.field);\n          //this.emit('touch', field.field, touch);\n        }\n      },\n      setError: (fieldId, error, emit = true) => {\n        const field = this.fieldsById.get(fieldId);\n\n        if (!field.shadow && field.fieldApi.getIsRelevant()) {\n          ObjectMap.set(\n            this.state.errors,\n            field.field,\n            field.fieldApi.getError()\n          );\n        }\n\n        // Shadow values override unless undefined\n        const currentError = ObjectMap.get(this.state.errors, field.field);\n        if (\n          field.shadow &&\n          field.fieldApi.getError() != undefined &&\n          field.fieldApi.relevant(this.state.values)\n        ) {\n          ObjectMap.set(\n            this.state.errors,\n            field.field,\n            field.fieldApi.getError()\n          );\n        }\n\n        // Special case for attempting to set shadow to undefiend\n        else if (\n          field.shadow &&\n          field.fieldApi.getError() === undefined &&\n          field.fieldApi.relevant(this.state.values) &&\n          // TODO maybe check if object or array\n          typeof currentError === 'string'\n        ) {\n          ObjectMap.set(\n            this.state.errors,\n            field.field,\n            field.fieldApi.getError()\n          );\n        }\n\n        if (emit) {\n          this.emit('change');\n          this.emit('field', field.field);\n          //this.emit('error', field.field, error);\n        }\n      },\n      expectRemoval: this.expectRemoval,\n      getInitialValue: this.getInitialValue,\n      getSavedValue: this.getSavedValue\n    };\n\n    // Define the formApi\n    this.formApi = {\n      setValue: this.setValue,\n      setTouched: this.setTouched,\n      setError: this.setError,\n      setFormError: this.setFormError,\n      setValues: this.setValues,\n      setInitialValue: this.setInitialValue,\n      getValue: this.getValue,\n      getTouched: this.getTouched,\n      getError: this.getError,\n      reset: this.reset,\n      submitForm: this.submitForm,\n      getState: this.getFormState,\n      getValues: this.getValues,\n      getFullField: this.getFullField,\n      fieldExists: this.fieldExists,\n      getInitialValue: this.getInitialValue,\n      validate: this.validate,\n      validateField: this.validateField,\n      screenValid: this.screenValid,\n      resetField: this.resetField,\n      getOptions: this.getOptions,\n      emitter: this,\n      getSavedValue: this.getSavedValue,\n      removeSavedState: this.removeSavedState,\n      getDerrivedValue: this.getDerrivedValue,\n      getStep: this.getStep,\n      setStep: this.setStep,\n      next: this.next,\n      back: this.back,\n      setCurrent: this.setCurrent,\n      validated: this.validated,\n      validating: this.validating,\n      getDirty: this.getDirty,\n      getPristine: this.getPristine,\n      getField: this.getField\n    };\n\n    this.on('value', field => {\n      // The forms values have changed so we want to clear form level error\n      delete this.state.error;\n      this.notify(field);\n    });\n  }\n\n  /* -------------------------------- Event Emitter ------------------------------ */\n\n  emit(event, ...args) {\n    // Grab the set based on the event\n    const listeners = this.subscriptions.get(event);\n    // Only call if we have listeners on that event ( null check )\n    if (listeners) {\n      listeners.forEach(listener => listener(...args));\n    }\n  }\n\n  on(event, listener) {\n    // Singleton check\n    if (!this.subscriptions.get(event)) {\n      this.subscriptions.set(event, new Set());\n    }\n    // Add listener\n    const listeners = this.subscriptions.get(event);\n    listeners.add(listener);\n  }\n\n  removeListener(event, listener) {\n    // Remove listener\n    const listeners = this.subscriptions.get(event);\n    listeners.delete(listener);\n  }\n\n  /* ---------------------------------- Setters ---------------------------------- */\n\n  setOptions(options) {\n    this.options = options;\n  }\n\n  setValue(name, value, options) {\n    this.getField(name).fieldApi.setValue(value, null, {\n      allowEmptyString: this.options.allowEmptyStrings,\n      ...options\n    });\n  }\n\n  setTouched(name, value) {\n    this.getField(name).fieldApi.setTouched(value);\n  }\n\n  setError(name, value) {\n    this.getField(name).fieldApi.setError(value);\n  }\n\n  setFormError(value) {\n    this.state.error = value;\n    this.emit('change');\n  }\n\n  validating() {\n    this.state.validating = this.state.validating + 1;\n    this.emit('change');\n  }\n\n  validated(name, error) {\n    // Decrement the validating\n    this.state.validating = this.state.validating - 1;\n\n    // Set the error if there is not already one ( sync error first )\n    if (!this.getError(name)) {\n      this.setError(name, error);\n    }\n\n    // If we are not still validating, and we were submitting, then submit form\n    // If we are async validating then dont submit yet\n    if (this.state.validating > 0) {\n      this.emit('change');\n      return;\n    }\n\n    // If we were submitting\n    if (this.state.submitting) {\n      // Check validity and perform submission if valid\n      if (this.valid()) {\n        debug('Submit', this.state);\n        this.emit('submit');\n      } else {\n        debug('Submit', this.state);\n        this.emit('failure');\n      }\n      this.state.submitting = false;\n    }\n\n    this.emit('change');\n  }\n\n  setStep(value) {\n    this.state.step = value;\n    this.emit('change');\n  }\n\n  setCurrent(component) {\n    this.state.Current = component;\n    this.emit('change');\n  }\n\n  back(prevComponent) {\n    this.state.step = this.state.step - 1;\n\n    this.state.Current = prevComponent;\n\n    this.emit('change');\n  }\n\n  next(nextComponent) {\n    // Validate the entire form\n    this.validate();\n\n    // If fields on the screen ( currently rendered ) are valid move on\n    if (this.screenValid()) {\n      this.state.step = this.state.step + 1;\n      this.state.Current = nextComponent;\n    }\n\n    // State will have changed\n    this.emit('change');\n  }\n\n  setInitialValue(field, value) {\n    ObjectMap.set(this.options.initialValues, field, value);\n  }\n\n  /* ---------------------------------- Getters ---------------------------------- */\n\n  /**\n   * Generate the external form state that will be exposed to the users\n   *\n   * @returns Form State\n   */\n  getFormState() {\n    debug('Returning form state');\n    return {\n      ...this.state,\n      pristine: this.pristine(),\n      dirty: this.dirty(),\n      invalid: this.invalid()\n    };\n  }\n\n  getFormApi() {\n    return this.formApi;\n  }\n\n  getDerrivedValue(name) {\n    const values = this.getValues();\n    return ObjectMap.get(values, name);\n  }\n\n  getValue(name) {\n    const value = this.getField(name).fieldApi.getValue();\n    debug('Getting value for', name, value);\n    return value;\n  }\n\n  getTouched(field) {\n    const touched = this.getField(field).fieldApi.getTouched();\n    debug('Getting touched for', field, touched);\n    return touched;\n  }\n\n  getError(field) {\n    const error = this.getField(field).fieldApi.getError();\n    debug('Getting error for', field, error);\n    return error;\n  }\n\n  getDirty(field) {\n    const dirty = this.getField(field).fieldApi.getDirty();\n    debug('Getting dirty for', field, dirty);\n    return dirty;\n  }\n\n  getPristine(field) {\n    const pristine = this.getField(field).fieldApi.getPristine();\n    debug('Getting pristine for', field, pristine);\n    return pristine;\n  }\n\n  getValues() {\n    debug('Gettings values');\n    return this.state.values;\n  }\n\n  getAllTouched() {\n    debug('Gettings touched');\n    return this.state.touched;\n  }\n\n  getErrors() {\n    debug('Gettings errors');\n    return this.state.errors;\n  }\n\n  getOptions() {\n    return this.options;\n  }\n\n  getStep() {\n    return this.state.step;\n  }\n\n  getSavedValue(name) {\n    const field = this.fieldsByName.get(name);\n    if (field && field.shadow) {\n      return ObjectMap.get(this.savedValues, `shadow-${name}`);\n    }\n    return ObjectMap.get(this.savedValues, name);\n  }\n\n  removeSavedState(name) {\n    const field = this.fieldsByName.get(name);\n    if (field && field.shadow) {\n      return ObjectMap.delete(this.savedValues, `shadow-${name}`);\n    }\n    return ObjectMap.delete(this.savedValues, name);\n  }\n\n  getFullField(field) {\n    return field;\n  }\n\n  getInitialValue(field) {\n    return ObjectMap.get(this.options.initialValues, field);\n  }\n\n  getField(name) {\n    debug('Getting Field', name);\n    const field = this.fieldsByName.get(name);\n    if (!field) {\n      // eslint-disable-next-line no-console\n      console.warn(`Attempting to get field ${name} but it does not exist`);\n      // Prevent app from crashing\n      return this.dummyField;\n    }\n    return field;\n  }\n\n  // Notify other fields\n  notify(field) {\n    // Example field - siblings[0].married\n    // Get the notifier\n    const notifier = this.getField(field);\n    // If we have a list we must notify each one\n    if (notifier && notifier.notify) {\n      // Example: ['spouse']\n      notifier.notify.forEach(fieldName => {\n        // Get the field toNotify\n        const JSPAN = `.${field}`;\n        const path = `${JSPAN.replace(/(.*)[.[].*/, '$1')}.${fieldName}`.slice(\n          1\n        );\n        // console.log('PATH', path);\n        // Example path - siblings[0].spouse\n        const toNotify = this.getField(path);\n        if (toNotify) {\n          debug('Notifying', toNotify.field);\n          toNotify.fieldApi.validate();\n          toNotify.fieldApi.checkRelevant();\n        }\n      });\n    }\n  }\n\n  validateField(field) {\n    this.getField(field).fieldApi.validate();\n  }\n\n  resetField(field) {\n    this.getField(field).fieldApi.reset();\n  }\n\n  fieldExists(field) {\n    return this.fieldsByName.get(field) != null;\n  }\n\n  valid() {\n    const errors = this.getErrors();\n    return !!(ObjectMap.empty(errors) && !this.state.error);\n  }\n\n  screenValid() {\n    // Return false if any of the fields on the screen are invalid\n    const error = Object.entries(this.onScreen).some(([, field]) =>\n      field.fieldApi.getError()\n    );\n    return !error;\n  }\n\n  invalid() {\n    const errors = this.getErrors();\n    return !!(!ObjectMap.empty(errors) || this.state.error);\n  }\n\n  pristine() {\n    // We are pristine if all our fields are pristine\n    // const touched = this.getAllTouched();\n    // const values = this.getValues();\n    // return ObjectMap.empty(touched) && ObjectMap.empty(values);\n    let pristine = true;\n    this.fieldsById.forEach(field => {\n      if (!field.fieldApi.getPristine()) {\n        pristine = false;\n      }\n    });\n\n    return pristine;\n  }\n\n  dirty() {\n    return !this.pristine();\n  }\n\n  reset() {\n    debug('Resetting');\n    // So because all fields controll themselves and, \"inform\", this controller\n    // of their changes, we need to literally itterate through all registered fields\n    // and reset them. Not a big deal but very important to remember that you cant simply\n    // reset this controllers state!\n    this.fieldsById.forEach(field => {\n      field.fieldApi.reset({ preventUpdate: true });\n    });\n    this.emit('reset');\n    this.emit('change');\n  }\n\n  setValues(values) {\n    debug('Setting values');\n    // So we because all fields controll themselves and, \"inform\", this controller\n    // of their changes, we need to literally itterate through all registered fields\n    // and set them. Not a big deal but very important to remember that you cant simply\n    // set this controllers state!\n    this.fieldsById.forEach(field => {\n      // Initialize the values if it needs to be\n      const value = ObjectMap.get(values, field.field);\n      if (value !== undefined) {\n        field.fieldApi.setValue(value, null, { preventUpdate: true });\n      }\n    });\n\n    this.emit('change');\n  }\n\n  validate() {\n    debug('Validating all fields');\n\n    const values = this.getValues();\n\n    // Validate schema if needed\n    if (this.options.validationSchema) {\n      const errors = validateYupSchema(this.options.validationSchema, values);\n      // So we because all fields controll themselves and, \"inform\", this controller\n      // of their changes, we need to literally itterate through all registered fields\n      // and set them. Not a big deal but very important to remember that you cant simply\n      // set this controllers state!\n      this.fieldsById.forEach(field => {\n        // Check to see if there is an error to set\n        // Note: we use has becuause value may be there but undefined\n        if (ObjectMap.has(errors, field.field)) {\n          const error = ObjectMap.get(errors, field.field);\n          // If there is an error then set it\n          this.setError(field.field, error);\n        } else {\n          // If we are doing schema validation then we need to clear out any old errors\n          this.setError(field.field, undefined);\n        }\n      });\n    }\n\n    // Validate AJV schema if needed\n    if (this.options.schema && this.options.ajv) {\n      const errors = validateAjvSchema(this.ajvValidate, values);\n      // So we because all fields controll themselves and, \"inform\", this controller\n      // of their changes, we need to literally itterate through all registered fields\n      // and set them. Not a big deal but very important to remember that you cant simply\n      // set this controllers state!\n      this.fieldsById.forEach(field => {\n        // Check to see if there is an error to set\n        // Note: we use has becuause value may be there but undefined\n        if (ObjectMap.has(errors, field.field)) {\n          const error = ObjectMap.get(errors, field.field);\n          // If there is an error then set it\n          this.setError(field.field, error);\n        } else {\n          // If we are doing schema validation then we need to clear out any old errors\n          this.setError(field.field, undefined);\n        }\n      });\n    }\n\n    // Itterate through and call validate on every field\n    this.fieldsById.forEach(field => {\n      field.fieldApi.validate(values);\n      // Second param to prevent validation\n      field.fieldApi.setTouched(true, true);\n    });\n\n    // Call the form level validation if its present\n    if (this.options.validate) {\n      const res = this.options.validate(values);\n      this.setFormError(res);\n    }\n\n    // Call the forms field level validation\n    if (this.options.validateFields) {\n      const errors = this.options.validateFields(values);\n      // So we because all fields controll themselves and, \"inform\", this controller\n      // of their changes, we need to literally itterate through all registered fields\n      // and set them. Not a big deal but very important to remember that you cant simply\n      // set this controllers state!\n      this.fieldsById.forEach(field => {\n        // Check to see if there is an error to set\n        // Note: we use has becuause value may be there but undefined\n        if (ObjectMap.has(errors, field.field)) {\n          const error = ObjectMap.get(errors, field.field);\n          // If there is an error then set it\n          this.setError(field.field, error);\n        }\n      });\n    }\n  }\n\n  asyncValidate() {\n    debug('Async Validating all fields');\n    const values = this.getValues();\n\n    // Itterate through and call validate on every field\n    this.fieldsById.forEach(field => {\n      field.fieldApi.asyncValidate(values);\n    });\n  }\n\n  keyDown(e) {\n    // If preventEnter then return\n    if (e.keyCode == 13 && this.options.preventEnter) {\n      e.preventDefault(e);\n      return false;\n    }\n  }\n\n  submitForm(e) {\n    // Incriment number of submit attempts\n    this.state.submits = this.state.submits + 1;\n    this.state.submitting = true;\n\n    if (!this.options.dontPreventDefault && e) {\n      // Prevent default browser form submission\n      e.preventDefault(e);\n    }\n\n    // Validate the form\n    this.validate();\n\n    // Emit a change\n    this.emit('change');\n\n    // Trigger all async validations\n    this.asyncValidate();\n\n    // If we are async validating then dont submit yet\n    if (this.state.validating > 0) {\n      return;\n    }\n\n    // Check validity and perform submission if valid\n    if (this.valid()) {\n      debug('Submit', this.state);\n      this.emit('submit');\n    } else {\n      debug('Submit', this.state);\n      this.emit('failure');\n    }\n\n    this.state.submitting = false;\n\n    this.emit('change');\n  }\n\n  mount() {\n    this.fieldsById.forEach(value => {\n      this.emit('field', value.field);\n    });\n  }\n\n  /* ---------------- Updater Functions (used by fields) ---------------- */\n\n  // ADDED initialRender parameter because of react 16.13.0 warning that does not like\n  // setting initial value during first render\n  register(id, field, initialRender) {\n    const { field: name, state } = field;\n    debug('Register ID:', id, 'Name:', name, state, 'Initial', initialRender);\n\n    // Example foo.bar.baz[3].baz >>>> foo.bar.baz[3]\n    const magicValue = name.slice(\n      0,\n      name.lastIndexOf('[') != -1 ? name.lastIndexOf(']') + 1 : name.length\n    );\n\n    // Field might be coming back after render remove old field\n    let alreadyRegistered;\n    this.fieldsById.forEach((value, key) => {\n      if (value && value.field === name) {\n        alreadyRegistered = key;\n      }\n    });\n\n    if (\n      //!this.expectedRemovals[magicValue] &&\n      alreadyRegistered &&\n      (field.keepState || field.inMultistep)\n    ) {\n      debug('Already Registered', name);\n      this.fieldsById.delete(alreadyRegistered);\n    } else if (\n      //!this.expectedRemovals[magicValue] &&\n      alreadyRegistered &&\n      (!field.keepState || !field.inMultistep)\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Check to make sure you have not registered two fields with the fieldName',\n        name\n      );\n    }\n\n    debug('Fields Registered', this.fieldsById.size);\n\n    // The field is on the screen\n    this.onScreen[id] = field;\n\n    // Always register the field\n    this.fieldsById.set(id, field);\n\n    // Always clear out expected removals when a reregistering array field comes in\n    debug('clearing expected removal', magicValue);\n    delete this.expectedRemovals[magicValue];\n    delete this.pulledOut[magicValue];\n\n    // The field is a shadow field ooo spooky so dont set anything\n    if (field.shadow) {\n      return;\n    }\n\n    // Update the forms state right away\n    this.updater.setValue(id, field.fieldApi.getValue(), false);\n    this.updater.setError(id, field.fieldApi.getError(), false);\n    this.updater.setTouched(id, field.fieldApi.getTouched(), false);\n\n    // We register field right away but dont want it to triger a rerender\n    if (!initialRender) {\n      this.emit('change');\n    }\n    this.emit('field', name);\n  }\n\n  deregister(id) {\n    const field = this.fieldsById.get(id);\n    const { field: name } = field;\n    debug('Deregister', id, name);\n\n    // The field is off the screen\n    delete this.onScreen[id];\n\n    // Example foo.bar.baz[3] --> foo.bar.baz[3].baz && foo.bar.baz[3].taz.raz[4].naz\n    const expectedRemoval = isExpected(name, this.expectedRemovals);\n\n    // Example foo.bar.baz[3].baz >>>> foo.bar.baz[3]\n    const magicValue = name.slice(\n      0,\n      name.lastIndexOf('[') != -1 ? name.lastIndexOf(']') + 1 : name.length\n    );\n\n    // If the fields state is to be kept then save the value\n    if (\n      // We are in a multistep or want to keep the state\n      (field.keepState || field.inMultistep) &&\n      // We are NOT expected to be removed\n      !expectedRemoval\n    ) {\n      // TODO ?? Exception where the field is irrelivant AND keep state was not passed ??\n      debug(`Saving field ${name}'s value`, field.fieldApi.getFieldState());\n      if (!field.shadow) {\n        ObjectMap.set(this.savedValues, name, field.fieldApi.getFieldState());\n      } else {\n        // We are shadow field and will store this value in the shadows\n        ObjectMap.set(\n          this.savedValues,\n          `shadow-${name}`,\n          field.fieldApi.getFieldState()\n        );\n      }\n    }\n\n    // Remove if its an expected removal OR we dont have keep state\n    if (\n      // This field was expected to be removed\n      expectedRemoval ||\n      // This field does not have keepstate and is NOT within a multistep\n      (!field.keepState && !field.inMultistep) ||\n      // If field is in multistep then we would always keep due to field.inMultistep\n      // BUT.. we need to also check if the field is irrelivant\n      // because if it gets unmounted, even if its part of a multistep, we want to remove\n      // the field completley, unless keep state was passed.\n      (!field.fieldApi.getIsRelevant() && !field.keepState)\n    ) {\n      // Remove the field completley\n      debug('Removing field', name);\n      this.fieldsById.delete(id);\n      // Clean up state only if its not expected removal, otherwise we will just pull it out\n      if (!expectedRemoval) {\n        ObjectMap.delete(this.state.values, name);\n        ObjectMap.delete(this.state.touched, name);\n        ObjectMap.delete(this.state.errors, name);\n\n        if (!field.shadow) {\n          ObjectMap.delete(this.savedValues, name);\n        } else {\n          ObjectMap.delete(this.savedValues, `shadow-${name}`);\n        }\n      }\n\n      // If we expected this removal then pullOut\n      if (expectedRemoval && this.pulledOut[magicValue]) {\n        debug('Pulling out', name, 'with magic value', magicValue);\n        ObjectMap.pullOut(this.state.values, magicValue);\n        ObjectMap.pullOut(this.state.touched, magicValue);\n        ObjectMap.pullOut(this.state.errors, magicValue);\n        ObjectMap.pullOut(this.savedValues, magicValue);\n        // console.log('Pull1', this.state.values);\n        // console.log('Pull2', this.savedValues);\n        delete this.pulledOut[magicValue];\n      }\n    }\n\n    this.emit('change');\n  }\n\n  expectRemoval(name) {\n    debug('Expecting removal of', name);\n    this.expectedRemovals[name] = true;\n    this.pulledOut[name] = true;\n  }\n\n  update(id, field, oldName) {\n    debug('Update', id, field.field, oldName, field.fieldState.value);\n\n    // Update the error touched and values of this field\n    const value = field.fieldApi.getValue();\n    const error = field.fieldApi.getError();\n    const t = field.fieldApi.getTouched();\n\n    // Clear the old value out\n    const oldField = this.fieldsByName.get(oldName);\n    // Only clear if we had an old name ( our name changed )\n    // %% the oldField is gone!\n    if (oldName && !oldField) {\n      // Setting nothing sets to undefined and does NOT pull out\n      ObjectMap.set(this.state.values, oldName);\n      ObjectMap.set(this.state.errors, oldName);\n      ObjectMap.set(this.state.touched, oldName);\n    }\n\n    // Set the value\n    ObjectMap.set(this.state.values, field.field, value);\n    ObjectMap.set(this.state.errors, field.field, error);\n    ObjectMap.set(this.state.touched, field.field, t);\n\n    this.emit('change');\n  }\n}\n\nexport default FormController;\n","import React from 'react';\nimport { FormStateContext, FormApiContext, FormRegisterContext } from '../Context';\nimport Debug from '../debug';\nimport useForm from '../hooks/useForm';\n\nconst logger = Debug('informed:FormProvider' + '\\t\\t');\n\nconst FormProvider = ({ \n  children, \n  formApi, \n  formController,\n  formState, \n  ...rest\n}) => {\n\n  logger('Render FormProvider');\n\n  if( formApi ){\n    logger('Render FormProvider with given values');\n    /* --- Create Provider with given values and render Content --- */\n    return (\n      <FormRegisterContext.Provider value={formController.updater}>\n        <FormApiContext.Provider value={formApi}>\n          <FormStateContext.Provider value={formState}>\n            {children}\n          </FormStateContext.Provider>\n        </FormApiContext.Provider>\n      </FormRegisterContext.Provider>\n    );\n  } \n\n  logger('Render FormProvider with generated values');\n  /* --- User did not pass values so create them --- */\n  const value = useForm(rest);\n\n  return (\n    <FormRegisterContext.Provider value={value.formController.updater}>\n      <FormApiContext.Provider value={value.formApi}>\n        <FormStateContext.Provider value={value.formState}>\n          {children}\n        </FormStateContext.Provider>\n      </FormApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n  \n};\n\nexport default FormProvider;\n","import React, { useState, useEffect, useMemo } from 'react';\nimport Debug from '../debug';\nimport FormController from '../FormController';\nimport FormProvider from '../components/FormProvider';\nimport FormFields from '../components/FormFields';\nimport useLayoutEffect from './useIsomorphicLayoutEffect';\n\nconst logger = Debug('informed:useForm' + '\\t\\t');\n\nconst useForm = ({\n  dontPreventDefault,\n  initialValues,\n  validate,\n  validateFields,\n  allowEmptyStrings,\n  preventEnter,\n  getApi,\n  apiRef,\n  onChange,\n  onReset,\n  onSubmit,\n  onValueChange,\n  onSubmitFailure,\n  validationSchema,\n  schema,\n  ajv,\n  fieldMap,\n  onlyValidateSchema,\n  ...userProps\n}) => {\n  logger('Render useForm');\n\n  // Generate form controller options\n  const formControllerOptions = useMemo(\n    () => ({\n      dontPreventDefault,\n      initialValues,\n      validate,\n      validateFields,\n      allowEmptyStrings,\n      preventEnter,\n      validationSchema,\n      schema,\n      ajv,\n      fieldMap\n    }),\n    [\n      dontPreventDefault,\n      initialValues,\n      validate,\n      validateFields,\n      allowEmptyStrings,\n      preventEnter,\n      validationSchema,\n      schema,\n      ajv,\n      fieldMap\n    ]\n  );\n\n  // Create form controller\n  const [formController] = useState(\n    () => new FormController(formControllerOptions)\n  );\n\n  // Update the options when they change\n  useEffect(\n    () => {\n      formController.setOptions(formControllerOptions);\n    },\n    [formControllerOptions]\n  );\n\n  useLayoutEffect(() => {\n    formController.mount();\n  }, []);\n\n  // Form state will be used to trigger rerenders\n  const [formState, setFormState] = useState(() =>\n    formController.getFormState()\n  );\n\n  // Register for events\n  useLayoutEffect(\n    () => {\n      const onChangeHandler = () =>\n        onChange && onChange(formController.getFormState());\n      const onResetHandler = () => onReset && onReset();\n      const onSubmitHandler = () =>\n        onSubmit && onSubmit(formController.getFormState().values);\n      const onValueHandler = () =>\n        onValueChange && onValueChange(formController.getFormState().values);\n      const onFailureHandler = () =>\n        onSubmitFailure &&\n        onSubmitFailure(formController.getFormState().errors);\n\n      // Register for events\n      formController.on('change', onChangeHandler);\n      formController.on('reset', onResetHandler);\n      formController.on('submit', onSubmitHandler);\n      formController.on('value', onValueHandler);\n      formController.on('failure', onFailureHandler);\n\n      // Unregister events\n      return () => {\n        formController.removeListener('change', onChangeHandler);\n        formController.removeListener('reset', onResetHandler);\n        formController.removeListener('submit', onSubmitHandler);\n        formController.removeListener('value', onValueHandler);\n        formController.removeListener('failure', onFailureHandler);\n      };\n    },\n    [onChange, onReset, onSubmit, onValueChange, onSubmitFailure]\n  );\n\n  // Initialize code like constructor but not muhahah\n  useState(() => {\n    // Update the form state to trigger rerender!\n    const onChangeHandlerRerender = () => {\n      logger('Setting form state');\n      setFormState(formController.getFormState());\n    };\n    // const debounced = debounce(onChangeHandlerRerender, 250);\n    formController.on('change', onChangeHandlerRerender);\n    // Give access to api outside\n    if (getApi) {\n      getApi(formController.getFormApi());\n    }\n    if (apiRef) {\n      apiRef.current = formController.getFormApi();\n    }\n  });\n\n  // We dont want this to happen on every render so thats why useState is used here\n  const [formApi] = useState(() => formController.getFormApi());\n\n  // TODO technically speaking this can be unsafe as there is circular dependency\n  // between form provider and useForm.. Its ok because anyone that in theory\n  // Uses a form provider and a use form hook themselves will never call the render\n  // function created here... that being said I will look into fixing that warning\n  // at some point :)\n  const render = children => (\n    <FormProvider\n      formApi={formApi}\n      formState={formState}\n      formController={formController}>\n      <>\n        {!children ? (\n          <FormFields schema={schema} onlyValidateSchema={onlyValidateSchema} />\n        ) : (\n          children\n        )}\n      </>\n    </FormProvider>\n  );\n\n  return { formApi, formState, formController, render, userProps };\n};\n\nexport default useForm;\n","import React from 'react';\nimport Debug from '../debug';\nimport useForm from '../hooks/useForm';\n\nconst debug = Debug('informed:Form' + '\\t\\t');\n\nconst Form = ({ \n  children, \n  render: renderProp,\n  component,\n  ...rest }) => {\n\n  debug('Render FORM');\n\n  const { \n    formApi, \n    formController,\n    formState, \n    render,\n    userProps\n  } = useForm(rest);\n    \n  const getContent = () => {\n\n    const props = {\n      formState,\n      formApi\n    };\n\n    if (component) {\n      return React.createElement(component, props, children);\n    }\n    if (renderProp) {\n      return renderProp(props);\n    }\n    if (typeof children === 'function') {\n      return children(props);\n    }\n    return children;\n  };\n  \n  /* --- Render Content --- */\n  return render(\n    <form\n      {...userProps}\n      onReset={formController.reset}\n      onSubmit={formController.submitForm}\n      onKeyDown={formController.keyDown}>\n      {getContent()}\n    </form>  \n  );\n  \n};\n\nexport default Form;\n","import React, { useContext, useMemo } from 'react';\nimport {\n  FormRegisterContext,\n  FormStateContext,\n  FormApiContext\n} from '../Context';\nimport useFormApi from '../hooks/useFormApi';\nimport useFormState from '../hooks/useFormState';\n\nconst buildScopedFormApi = (scope, formApi) => {\n  return {\n    ...formApi,\n    getValue: field => formApi.getValue(`${scope}.${field}`),\n    getTouched: field => formApi.getTouched(`${scope}.${field}`),\n    getError: field => formApi.getError(`${scope}.${field}`),\n    setValue: (field, value) => formApi.setValue(`${scope}.${field}`, value),\n    setTouched: (field, value) =>\n      formApi.setTouched(`${scope}.${field}`, value),\n    setError: (field, value) => formApi.setError(`${scope}.${field}`, value),\n    getInitialValue: field => formApi.getInitialValue(`${scope}.${field}`),\n    getFullField: field => `${formApi.getFullField(scope)}.${field}`\n  };\n};\n\nconst buildScopedRegister = (scope, formRegister) => {\n  const {\n    register,\n    deregister,\n    setValue,\n    setTouched,\n    setError,\n    update,\n    getField,\n    expectRemoval,\n    getInitialValue,\n    fieldMap,\n    getSavedValue\n  } = formRegister;\n\n  return {\n    register: (field, ...args) => register(`${scope}.${field}`, ...args),\n    deregister: (field, ...args) => deregister(`${scope}.${field}`, ...args),\n    update: (field, ...args) => update(`${scope}.${field}`, ...args),\n    setValue: (field, ...args) => setValue(`${scope}.${field}`, ...args),\n    setTouched: (field, ...args) => setTouched(`${scope}.${field}`, ...args),\n    setError: (field, ...args) => setError(`${scope}.${field}`, ...args),\n    getField: (field, ...args) => getField(`${scope}.${field}`, ...args),\n    expectRemoval: (field, ...args) =>\n      expectRemoval(`${scope}.${field}`, ...args),\n    getInitialValue: field => getInitialValue(`${scope}.${field}`),\n    getSavedValue: field => getSavedValue(`${scope}.${field}`),\n    fieldMap\n  };\n};\n\nconst Scope = ({ scope, children }) => {\n  const formRegister = useContext(FormRegisterContext);\n  const formApi = useFormApi();\n  const formState = useFormState();\n\n  // VERY important to memoize the builders!\n  const scopedFormApi = useMemo(() => buildScopedFormApi(scope, formApi), [\n    scope\n  ]);\n  const scopedRegister = useMemo(\n    () => buildScopedRegister(scope, formRegister),\n    [scope]\n  );\n\n  return (\n    <FormRegisterContext.Provider value={scopedRegister}>\n      <FormApiContext.Provider value={scopedFormApi}>\n        <FormStateContext.Provider value={formState}>\n          {children}\n        </FormStateContext.Provider>\n      </FormApiContext.Provider>\n    </FormRegisterContext.Provider>\n  );\n};\n\nexport default Scope;\n","import React from 'react';\n\nimport useFormState from '../hooks/useFormState';\n\nconst FormState = props => {\n  const formState = useFormState();\n\n  let displayState = {};\n\n  if (Object.keys(props).length > 0) {\n    Object.keys(props).forEach(key => {\n      displayState[key] = formState[key];\n    });\n  } else {\n    displayState = formState;\n  }\n\n  const {\n    pristine,\n    dirty,\n    invalid,\n    values,\n    errors,\n    touched,\n    validating,\n    submitting\n  } = displayState;\n  return (\n    <pre>\n      <code>\n        {JSON.stringify(\n          {\n            pristine,\n            dirty,\n            invalid,\n            values,\n            errors,\n            touched,\n            validating,\n            submitting\n          },\n          null,\n          2\n        )}\n      </code>\n    </pre>\n  );\n};\n\nexport default FormState;\n","import React, { useState, useRef } from 'react';\nimport { MultistepApiContext, MultistepStateContext } from '../Context';\nimport useFormApi from './useFormApi';\nimport useStateWithGetter from './useStateWithGetter';\n\nconst useMultistep = ({ initialStep, multistepApiRef }) => {\n  // Get the formApi\n  const { getValues, validate, screenValid } = useFormApi();\n\n  // Track our steps by name\n  const [stepsByName] = useState(new Map());\n\n  // Track number of steps\n  const nSteps = useRef(0);\n\n  // Define our state\n  const [\n    multistepState,\n    setMultistepState,\n    getMultistepState\n  ] = useStateWithGetter({\n    current: initialStep,\n    steps: [],\n    goal: null\n  });\n\n  // Define our api\n  const [multistepApi] = useState(() => {\n    const getCurrentStep = () => {\n      // Get the current state\n      const { current } = getMultistepState();\n      // Get the current step\n      const currentStep = stepsByName.get(current);\n      // Return it\n      return currentStep;\n    };\n\n    const api = {\n      // Gets the whole state\n      getState: () => getMultistepState(),\n      // Gets just the current\n      getCurrentStep,\n      // Gets that step\n      getStep: name => stepsByName.get(name),\n      // gets the current number of steps\n      getNumberOfSteps: () => {\n        return stepsByName.size;\n      },\n      // Goes to next step\n      next: () => {\n        // Validate the entire form\n        validate();\n\n        // If fields on the screen ( currently rendered ) are valid move on\n        if (screenValid()) {\n          // Get the current step\n          const { getNext } = getCurrentStep();\n          const next = getNext();\n          // Determine what the next step should be\n          const nextStep =\n            typeof next === 'function' ? next(getValues()) : next;\n          // Determine if it has a next\n          if (nextStep) {\n            setMultistepState(prev => ({\n              ...prev,\n              current: nextStep\n            }));\n          }\n        }\n      },\n      // Goes to previous step\n      back: () => {\n        // Get the current step\n        const { getPrevious } = getCurrentStep();\n        const previous = getPrevious();\n        // Determine what the previous step should be\n        const previousStep =\n          typeof previous === 'function' ? previous(getValues()) : previous;\n        // Determine if it has a previous\n        if (previousStep) {\n          setMultistepState(prev => ({\n            ...prev,\n            current: previousStep\n          }));\n        }\n      },\n      // Goes to specified step\n      setCurrent: stp => {\n        if (stp) {\n          const goalIndex = stepsByName.get(stp).index;\n          // console.log(\n          //   'GOAL INDEX',\n          //   goalIndex,\n          //   'STPINDEX',\n          //   getCurrentStep().index\n          // );\n          if (goalIndex < getCurrentStep().index) {\n            setMultistepState(prev => ({\n              ...prev,\n              current: stp,\n              goal: null\n            }));\n          } else {\n            setMultistepState(prev => ({\n              ...prev,\n              // current: stp,\n              goal: stp\n            }));\n          }\n        }\n      },\n      // Registers the step\n      register: (name, step, initial) => {\n        if (initial) {\n          nSteps.current = nSteps.current + 1;\n          stepsByName.set(name, { ...step, index: nSteps.current });\n        } else {\n          setMultistepState(prev => ({\n            ...prev,\n            steps: Array.from(stepsByName.keys())\n          }));\n        }\n      },\n      // Deregisters the step\n      deregister: name => {\n        stepsByName.delete(name);\n        nSteps.current = nSteps.current - 1;\n        setMultistepState(prev => ({\n          ...prev,\n          steps: Array.from(stepsByName.keys())\n        }));\n      }\n    };\n\n    if (multistepApiRef) {\n      multistepApiRef.current = api;\n    }\n\n    return api;\n  });\n\n  // Render funtion that will provide state and api\n  const render = children => (\n    <MultistepApiContext.Provider value={multistepApi}>\n      <MultistepStateContext.Provider value={multistepState}>\n        {children}\n      </MultistepStateContext.Provider>\n    </MultistepApiContext.Provider>\n  );\n\n  return {\n    ...multistepApi,\n    ...multistepState,\n    render\n  };\n};\n\nexport default useMultistep;\n","import React, { useContext } from 'react';\nimport { MultistepStateContext } from '../Context';\n\nfunction useMultistepState() {\n  return useContext(MultistepStateContext);\n}\n\nexport default useMultistepState;\n","import React, { useContext } from 'react';\nimport { MultistepApiContext } from '../Context';\n\nfunction useMultistepApi() {\n  return useContext(MultistepApiContext);\n}\n\nexport default useMultistepApi;\n","import React, { useEffect, useRef, useState } from 'react';\nimport useMultistepState from './useMultistepState';\nimport useFormState from './useFormState';\nimport useMultistepApi from './useMultistepApi';\nimport { MultistepStepContext } from '../Context';\n\nconst useMultistepStep = ({ step, next, previous, relevant }) => {\n  const { values } = useFormState();\n  const { current, goal } = useMultistepState();\n  const { register, deregister, next: goToNext } = useMultistepApi();\n\n  const isCurrent = step === current;\n  const isRelevant = relevant ? relevant(values) : true;\n\n  const nextRef = useRef(next);\n  const prevRef = useRef(previous);\n  const relevantRef = useRef();\n  nextRef.current = next;\n  prevRef.current = previous;\n  relevantRef.current = relevant;\n\n  useState(() => {\n    register(\n      step,\n      {\n        name: step,\n        getNext: () => nextRef.current,\n        getPrevious: () => prevRef.current\n      },\n      true\n    );\n  });\n\n  useEffect(\n    () => {\n      register(step, {\n        name: step,\n        getNext: () => nextRef.current,\n        getPrevious: () => prevRef.current\n      });\n      return () => {\n        deregister(step);\n      };\n    },\n    [step]\n  );\n\n  useEffect(\n    () => {\n      // if we are NOT at the goal go to the next step\n      if (goal && isCurrent && goal !== step) {\n        // console.log('GOAL', goal, 'STEP', step, 'INDEX', getStep(step).index);\n        // console.log('GOING TO NEXT STEP');\n        goToNext();\n      }\n    },\n    [goal, isCurrent]\n  );\n\n  const render = children => {\n    return (\n      <MultistepStepContext.Provider\n        value={{\n          relevant: params =>\n            relevantRef.current ? relevantRef.current(params) : true,\n          multistep: true\n        }}>\n        {isCurrent && isRelevant ? children : null}\n      </MultistepStepContext.Provider>\n    );\n  };\n\n  return {\n    isCurrent,\n    isRelevant,\n    step,\n    render\n  };\n};\n\nexport default useMultistepStep;\n","import React from 'react';\nimport useMultistep from '../hooks/useMultistep';\nimport useMultistepStep from '../hooks/useMultistepStep';\n\nexport default function Multistep({ children, ...props }) {\n  const { render, ...context } = useMultistep(props);\n\n  if (typeof children === 'function') {\n    return render(children(context));\n  }\n\n  return render(children);\n}\n\nMultistep.Step = function MultistepStep({ children, ...props }) {\n  const { render } = useMultistepStep(props);\n  return render(children);\n};\n","import React, { useContext } from 'react';\nimport useFormApi from '../hooks/useFormApi';\nimport { computeFieldFromProperty, getSchemaPathFromJsonPath } from '../utils';\nimport ObjectMap from '../ObjectMap';\nimport { FormRegisterContext } from '../Context';\n\nconst FormField = ({ field }) => {\n  // Get the field map off the forms context\n  const { fieldMap } = useContext(FormRegisterContext);\n\n  // Grab the form api ( we need it to get the actual field name because might be in scope )\n  const { getFullField, getOptions } = useFormApi();\n\n  // Grab the full field\n  const fullField = getFullField(field);\n\n  // Grap the schema\n  const { schema } = getOptions();\n\n  // First find property from the schema via the path to that field\n\n  // Examples\n  // field = \"name\" ---> properties.name\n  // field = \"brother.name\" ---> properties.brother.properties.name\n  // field = \"brother.siblings[1].friend.name\" ---> properties.brother.properties.siblings.items[1].properties.friend.properties.name\n  const path = getSchemaPathFromJsonPath(fullField);\n  const property = ObjectMap.get(schema, path);\n\n  // If property was not found return null\n  if (!property) {\n    return null;\n  }\n\n  // Next compute the field from property\n  const schemaField = computeFieldFromProperty(field, property);\n\n  const { props, componentType } = schemaField;\n\n  const Component = fieldMap[componentType];\n\n  return <Component field={field} {...props} />;\n};\n\nexport default FormField;\n","import React from 'react';\nimport useFormApi from '../hooks/useFormApi';\nimport FormFields from './FormFields';\n\nconst SchemaFields = () => {\n  const { getOptions } = useFormApi();\n\n  // Grap the schema\n  const { schema } = getOptions();\n\n  return <FormFields schema={schema} />;\n};\n\nexport default SchemaFields;\n","import React from 'react';\nimport { FormApiContext } from '../Context';\n\nconst withFormApi = Component =>\n  React.forwardRef((props, ref) => (\n    <FormApiContext.Consumer>\n      {(formApi) => <Component formApi={formApi} ref={ref} {...props} />}\n    </FormApiContext.Consumer>\n  ));\n\nexport default withFormApi;\n","import React from 'react';\nimport { FormStateContext } from '../Context';\n\nconst withFormState = Component =>\n  React.forwardRef((props, ref) => (\n    <FormStateContext.Consumer>\n      {(formState) => (\n        <Component formState={formState} ref={ref} {...props} />\n      )}\n    </FormStateContext.Consumer>\n  ));\n\nexport default withFormState;\n","// eslint-disable-next-line no-unused-vars\nimport React, { useMemo } from 'react';\nimport useFormApi from './useFormApi';\n\nconst buildFieldApi = (formApi, field) => {\n  return {\n    // TODO refactor to use field api from updater.. need to make sure this\n    // will be stable\n    getValue: () => formApi.getValue(field),\n    setValue: value => formApi.setValue(field, value),\n    getTouched: () => formApi.getTouched(field),\n    setTouched: value => formApi.setTouched(field, value),\n    getError: () => formApi.getError(field),\n    setError: value => formApi.setError(field, value),\n    reset: () => formApi.resetField(field),\n    validate: () => formApi.validateField(field),\n    exists: () => formApi.fieldExists(field),\n    getDirty: () => formApi.getDirty(field),\n    getPristine: () => formApi.getPristine(field),\n    getFieldState: () => formApi.getField(field).fieldApi.getFieldState()\n  };\n};\n\nfunction useFieldApi(field) {\n  const formApi = useFormApi();\n\n  const fieldApi = useMemo(() => buildFieldApi(formApi, field), [field]);\n  return fieldApi;\n}\n\nexport default useFieldApi;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport useFieldApi from './useFieldApi';\nimport useFormApi from './useFormApi';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\n\nfunction useFieldState(name) {\n  const fieldApi = useFieldApi(name);\n  const formApi = useFormApi();\n\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  useIsomorphicLayoutEffect(() => {\n    const listener = target => {\n      if (target === name) {\n        forceUpdate();\n      }\n    };\n\n    formApi.emitter.on('field', listener);\n\n    return () => {\n      formApi.emitter.removeListener('field', listener);\n    };\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    forceUpdate();\n  }, []);\n\n  // useEffect(() => {\n  //   forceUpdate();\n  // }, []);\n\n  return fieldApi.getFieldState() || {};\n}\n\nexport default useFieldState;\n","import React from 'react';\nimport useFieldState from '../hooks/useFieldState';\n\nconst withFieldState = field => Component => props => {\n  const fieldState = useFieldState(field);\n  return <Component fieldState={fieldState} {...props} />;\n};\n\nexport default withFieldState;","import React from 'react';\nimport useFieldApi from '../hooks/useFieldApi';\n\nconst withFieldApi = field => Component => (props) => {\n  const fieldApi = useFieldApi( field );\n  return <Component fieldApi={fieldApi} {...props} />;\n};\n\nexport default withFieldApi;\n","import React from 'react';\n\nconst Option = ({ value, forwardedRef, children, ...rest }) => {\n  return (\n    <option ref={forwardedRef} value={value} key={value} {...rest}>\n      {children}\n    </option>\n  );\n};\n\nexport default Option;\n","import Form from './components/Form';\nimport Scope from './components/Scope';\nimport ArrayField from './components/ArrayField';\nimport FormProvider from './components/FormProvider';\nimport FormState from './components/FormState';\nimport Relevant from './components/Relevant';\nimport Multistep from './components/Multistep';\nimport FormField from './components/FormField';\nimport SchemaFields from './components/SchemaFields';\nimport FormFields from './components/FormFields';\nimport FormComponents from './components/FormComponents';\n\nimport withFormApi from './HOC/withFormApi';\nimport withFormState from './HOC/withFormState';\nimport withFieldState from './HOC/withFieldState';\nimport withFieldApi from './HOC/withFieldApi';\nimport withRadioGroup from './HOC/withRadioGroup';\nimport asField from './HOC/asField';\n\nimport useForm from './hooks/useForm';\nimport useField from './hooks/useField';\nimport useFieldApi from './hooks/useFieldApi';\nimport useFieldState from './hooks/useFieldState';\nimport useFormApi from './hooks/useFormApi';\nimport useFormState from './hooks/useFormState';\nimport useArrayField from './hooks/useArrayField';\nimport useMultistepApi from './hooks/useMultistepApi';\nimport useMultistepState from './hooks/useMultistepState';\nimport useArrayFieldApi from './hooks/useArrayFieldApi';\nimport useArrayFieldItemApi from './hooks/useArrayFieldItemApi';\nimport useCursorPosition from './hooks/useCursorPosition';\n\nimport Text from './components/form-fields/Text';\nimport Radio from './components/form-fields/Radio';\nimport TextArea from './components/form-fields/TextArea';\nimport Select from './components/form-fields/Select';\nimport Option from './components/form-fields/Option';\nimport Checkbox from './components/form-fields/Checkbox';\nimport RadioGroup from './components/form-fields/RadioGroup';\n\nimport { BasicText } from './components/form-fields/Text';\nimport { BasicRadio } from './components/form-fields/Radio';\nimport { BasicRadioGroup } from './components/form-fields/RadioGroup';\nimport { BasicTextArea } from './components/form-fields/TextArea';\nimport { BasicSelect } from './components/form-fields/Select';\nimport { BasicCheckbox } from './components/form-fields/Checkbox';\n\nimport * as utils from './utils';\n\nconst Input = Text;\n\nexport {\n  Form,\n  FormProvider,\n  withFormApi,\n  withFormState,\n  withFieldApi,\n  withFieldState,\n  withRadioGroup,\n  asField,\n  useForm,\n  useField,\n  useFieldApi,\n  useFieldState,\n  useFormApi,\n  useFormState,\n  useMultistepState,\n  useMultistepApi,\n  useArrayFieldApi,\n  useArrayFieldItemApi,\n  useCursorPosition,\n  Text,\n  Input,\n  Radio,\n  TextArea,\n  Select,\n  Option,\n  Checkbox,\n  RadioGroup,\n  BasicText,\n  BasicRadio,\n  BasicRadioGroup,\n  BasicTextArea,\n  BasicSelect,\n  BasicCheckbox,\n  Scope,\n  ArrayField,\n  useArrayField,\n  FormState,\n  Relevant,\n  Multistep,\n  FormField,\n  SchemaFields,\n  FormFields,\n  FormComponents,\n  utils\n};\n","module.exports = require(\"react\");"],"sourceRoot":""}